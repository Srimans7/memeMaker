{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Factory = void 0;\nvar Util_1 = require(\"./Util\");\nvar Validators_1 = require(\"./Validators\");\nvar GET = 'get',\n  SET = 'set';\nexports.Factory = {\n  addGetterSetter: function (constructor, attr, def, validator, after) {\n    exports.Factory.addGetter(constructor, attr, def);\n    exports.Factory.addSetter(constructor, attr, validator, after);\n    exports.Factory.addOverloadedGetterSetter(constructor, attr);\n  },\n  addGetter: function (constructor, attr, def) {\n    var method = GET + Util_1.Util._capitalize(attr);\n    constructor.prototype[method] = constructor.prototype[method] || function () {\n      var val = this.attrs[attr];\n      return val === undefined ? def : val;\n    };\n  },\n  addSetter: function (constructor, attr, validator, after) {\n    var method = SET + Util_1.Util._capitalize(attr);\n    if (!constructor.prototype[method]) {\n      exports.Factory.overWriteSetter(constructor, attr, validator, after);\n    }\n  },\n  overWriteSetter: function (constructor, attr, validator, after) {\n    var method = SET + Util_1.Util._capitalize(attr);\n    constructor.prototype[method] = function (val) {\n      if (validator && val !== undefined && val !== null) {\n        val = validator.call(this, val, attr);\n      }\n      this._setAttr(attr, val);\n      if (after) {\n        after.call(this);\n      }\n      return this;\n    };\n  },\n  addComponentsGetterSetter: function (constructor, attr, components, validator, after) {\n    var len = components.length,\n      capitalize = Util_1.Util._capitalize,\n      getter = GET + capitalize(attr),\n      setter = SET + capitalize(attr),\n      n,\n      component;\n    constructor.prototype[getter] = function () {\n      var ret = {};\n      for (n = 0; n < len; n++) {\n        component = components[n];\n        ret[component] = this.getAttr(attr + capitalize(component));\n      }\n      return ret;\n    };\n    var basicValidator = Validators_1.getComponentValidator(components);\n    constructor.prototype[setter] = function (val) {\n      var oldVal = this.attrs[attr],\n        key;\n      if (validator) {\n        val = validator.call(this, val);\n      }\n      if (basicValidator) {\n        basicValidator.call(this, val, attr);\n      }\n      for (key in val) {\n        if (!val.hasOwnProperty(key)) {\n          continue;\n        }\n        this._setAttr(attr + capitalize(key), val[key]);\n      }\n      this._fireChangeEvent(attr, oldVal, val);\n      if (after) {\n        after.call(this);\n      }\n      return this;\n    };\n    exports.Factory.addOverloadedGetterSetter(constructor, attr);\n  },\n  addOverloadedGetterSetter: function (constructor, attr) {\n    var capitalizedAttr = Util_1.Util._capitalize(attr),\n      setter = SET + capitalizedAttr,\n      getter = GET + capitalizedAttr;\n    constructor.prototype[attr] = function () {\n      if (arguments.length) {\n        this[setter](arguments[0]);\n        return this;\n      }\n      return this[getter]();\n    };\n  },\n  addDeprecatedGetterSetter: function (constructor, attr, def, validator) {\n    Util_1.Util.error('Adding deprecated ' + attr);\n    var method = GET + Util_1.Util._capitalize(attr);\n    var message = attr + ' property is deprecated and will be removed soon. Look at Konva change log for more information.';\n    constructor.prototype[method] = function () {\n      Util_1.Util.error(message);\n      var val = this.attrs[attr];\n      return val === undefined ? def : val;\n    };\n    exports.Factory.addSetter(constructor, attr, validator, function () {\n      Util_1.Util.error(message);\n    });\n    exports.Factory.addOverloadedGetterSetter(constructor, attr);\n  },\n  backCompat: function (constructor, methods) {\n    Util_1.Util.each(methods, function (oldMethodName, newMethodName) {\n      var method = constructor.prototype[newMethodName];\n      var oldGetter = GET + Util_1.Util._capitalize(oldMethodName);\n      var oldSetter = SET + Util_1.Util._capitalize(oldMethodName);\n      function deprecated() {\n        method.apply(this, arguments);\n        Util_1.Util.error('\"' + oldMethodName + '\" method is deprecated and will be removed soon. Use \"\"' + newMethodName + '\" instead.');\n      }\n      constructor.prototype[oldMethodName] = deprecated;\n      constructor.prototype[oldGetter] = deprecated;\n      constructor.prototype[oldSetter] = deprecated;\n    });\n  },\n  afterSetFilter: function () {\n    this._filterUpToDate = false;\n  }\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","Factory","Util_1","require","Validators_1","GET","SET","addGetterSetter","constructor","attr","def","validator","after","addGetter","addSetter","addOverloadedGetterSetter","method","Util","_capitalize","prototype","val","attrs","undefined","overWriteSetter","call","_setAttr","addComponentsGetterSetter","components","len","length","capitalize","getter","setter","n","component","ret","getAttr","basicValidator","getComponentValidator","oldVal","key","hasOwnProperty","_fireChangeEvent","capitalizedAttr","arguments","addDeprecatedGetterSetter","error","message","backCompat","methods","each","oldMethodName","newMethodName","oldGetter","oldSetter","deprecated","apply","afterSetFilter","_filterUpToDate"],"sources":["/Users/UX201446/Documents/GitHub/konva/node_modules/konva/lib/Factory.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Factory = void 0;\nvar Util_1 = require(\"./Util\");\nvar Validators_1 = require(\"./Validators\");\nvar GET = 'get', SET = 'set';\nexports.Factory = {\n    addGetterSetter: function (constructor, attr, def, validator, after) {\n        exports.Factory.addGetter(constructor, attr, def);\n        exports.Factory.addSetter(constructor, attr, validator, after);\n        exports.Factory.addOverloadedGetterSetter(constructor, attr);\n    },\n    addGetter: function (constructor, attr, def) {\n        var method = GET + Util_1.Util._capitalize(attr);\n        constructor.prototype[method] =\n            constructor.prototype[method] ||\n                function () {\n                    var val = this.attrs[attr];\n                    return val === undefined ? def : val;\n                };\n    },\n    addSetter: function (constructor, attr, validator, after) {\n        var method = SET + Util_1.Util._capitalize(attr);\n        if (!constructor.prototype[method]) {\n            exports.Factory.overWriteSetter(constructor, attr, validator, after);\n        }\n    },\n    overWriteSetter: function (constructor, attr, validator, after) {\n        var method = SET + Util_1.Util._capitalize(attr);\n        constructor.prototype[method] = function (val) {\n            if (validator && val !== undefined && val !== null) {\n                val = validator.call(this, val, attr);\n            }\n            this._setAttr(attr, val);\n            if (after) {\n                after.call(this);\n            }\n            return this;\n        };\n    },\n    addComponentsGetterSetter: function (constructor, attr, components, validator, after) {\n        var len = components.length, capitalize = Util_1.Util._capitalize, getter = GET + capitalize(attr), setter = SET + capitalize(attr), n, component;\n        constructor.prototype[getter] = function () {\n            var ret = {};\n            for (n = 0; n < len; n++) {\n                component = components[n];\n                ret[component] = this.getAttr(attr + capitalize(component));\n            }\n            return ret;\n        };\n        var basicValidator = Validators_1.getComponentValidator(components);\n        constructor.prototype[setter] = function (val) {\n            var oldVal = this.attrs[attr], key;\n            if (validator) {\n                val = validator.call(this, val);\n            }\n            if (basicValidator) {\n                basicValidator.call(this, val, attr);\n            }\n            for (key in val) {\n                if (!val.hasOwnProperty(key)) {\n                    continue;\n                }\n                this._setAttr(attr + capitalize(key), val[key]);\n            }\n            this._fireChangeEvent(attr, oldVal, val);\n            if (after) {\n                after.call(this);\n            }\n            return this;\n        };\n        exports.Factory.addOverloadedGetterSetter(constructor, attr);\n    },\n    addOverloadedGetterSetter: function (constructor, attr) {\n        var capitalizedAttr = Util_1.Util._capitalize(attr), setter = SET + capitalizedAttr, getter = GET + capitalizedAttr;\n        constructor.prototype[attr] = function () {\n            if (arguments.length) {\n                this[setter](arguments[0]);\n                return this;\n            }\n            return this[getter]();\n        };\n    },\n    addDeprecatedGetterSetter: function (constructor, attr, def, validator) {\n        Util_1.Util.error('Adding deprecated ' + attr);\n        var method = GET + Util_1.Util._capitalize(attr);\n        var message = attr +\n            ' property is deprecated and will be removed soon. Look at Konva change log for more information.';\n        constructor.prototype[method] = function () {\n            Util_1.Util.error(message);\n            var val = this.attrs[attr];\n            return val === undefined ? def : val;\n        };\n        exports.Factory.addSetter(constructor, attr, validator, function () {\n            Util_1.Util.error(message);\n        });\n        exports.Factory.addOverloadedGetterSetter(constructor, attr);\n    },\n    backCompat: function (constructor, methods) {\n        Util_1.Util.each(methods, function (oldMethodName, newMethodName) {\n            var method = constructor.prototype[newMethodName];\n            var oldGetter = GET + Util_1.Util._capitalize(oldMethodName);\n            var oldSetter = SET + Util_1.Util._capitalize(oldMethodName);\n            function deprecated() {\n                method.apply(this, arguments);\n                Util_1.Util.error('\"' +\n                    oldMethodName +\n                    '\" method is deprecated and will be removed soon. Use \"\"' +\n                    newMethodName +\n                    '\" instead.');\n            }\n            constructor.prototype[oldMethodName] = deprecated;\n            constructor.prototype[oldGetter] = deprecated;\n            constructor.prototype[oldSetter] = deprecated;\n        });\n    },\n    afterSetFilter: function () {\n        this._filterUpToDate = false;\n    },\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}