{"ast":null,"code":"import Konva from 'konva/lib/Core';\nimport { applyNodeProps, updatePicture, EVENTS_NAMESPACE } from './makeUpdates';\nexport { unstable_now as now, unstable_IdlePriority as idlePriority, unstable_runWithPriority as run } from 'scheduler';\nvar NO_CONTEXT = {};\nvar UPDATE_SIGNAL = {};\n\n// for react-spring capability\nKonva.Node.prototype._applyProps = applyNodeProps;\nexport function appendInitialChild(parentInstance, child) {\n  if (typeof child === 'string') {\n    // Noop for string children of Text (eg <Text>foo</Text>)\n    console.error('Do not use plain text as child of Konva.Node. You are using text: ' + child);\n    return;\n  }\n  parentInstance.add(child);\n  updatePicture(parentInstance);\n}\nexport function createInstance(type, props, internalInstanceHandle) {\n  var NodeClass = Konva[type];\n  if (!NodeClass) {\n    console.error('Konva has no node with the type ' + type + '. If you use minimal version of react-konva, just import required nodes into Konva: \"import \"konva/lib/shapes/' + type + '\"  If you want to render DOM elements as part of canvas tree take a look into this demo: https://konvajs.github.io/docs/react/DOM_Portal.html');\n    return;\n  }\n\n  // we need to split props into events and non events\n  // we we can pass non events into constructor directly\n  // that way the performance should be better\n  // we we apply change \"applyNodeProps\"\n  // then it will trigger change events on first run\n  // but we don't need them!\n  var propsWithoutEvents = {};\n  var propsWithOnlyEvents = {};\n  for (var key in props) {\n    var isEvent = key.slice(0, 2) === 'on';\n    if (isEvent) {\n      propsWithOnlyEvents[key] = props[key];\n    } else {\n      propsWithoutEvents[key] = props[key];\n    }\n  }\n  var instance = new NodeClass(propsWithoutEvents);\n  applyNodeProps(instance, propsWithOnlyEvents);\n  return instance;\n}\nexport function createTextInstance(text, rootContainerInstance, internalInstanceHandle) {\n  console.error('Text components are not supported for now in ReactKonva. Your text is: \"' + text + '\"');\n}\nexport function finalizeInitialChildren(domElement, type, props) {\n  return false;\n}\nexport function getPublicInstance(instance) {\n  return instance;\n}\nexport function prepareForCommit() {\n  return null;\n}\nexport function preparePortalMount() {\n  return null;\n}\nexport function prepareUpdate(domElement, type, oldProps, newProps) {\n  return UPDATE_SIGNAL;\n}\nexport function resetAfterCommit() {\n  // Noop\n}\nexport function resetTextContent(domElement) {\n  // Noop\n}\nexport function shouldDeprioritizeSubtree(type, props) {\n  return false;\n}\nexport function getRootHostContext() {\n  return NO_CONTEXT;\n}\nexport function getChildHostContext() {\n  return NO_CONTEXT;\n}\nexport var scheduleTimeout = setTimeout;\nexport var cancelTimeout = clearTimeout;\nexport var noTimeout = -1;\n// export const schedulePassiveEffects = scheduleDeferredCallback;\n// export const cancelPassiveEffects = cancelDeferredCallback;\n\nexport function shouldSetTextContent(type, props) {\n  return false;\n}\n\n// The Konva renderer is secondary to the React DOM renderer.\nexport var isPrimaryRenderer = false;\nexport var warnsIfNotActing = true;\nexport var supportsMutation = true;\nexport function appendChild(parentInstance, child) {\n  if (child.parent === parentInstance) {\n    child.moveToTop();\n  } else {\n    parentInstance.add(child);\n  }\n  updatePicture(parentInstance);\n}\nexport function appendChildToContainer(parentInstance, child) {\n  if (child.parent === parentInstance) {\n    child.moveToTop();\n  } else {\n    parentInstance.add(child);\n  }\n  updatePicture(parentInstance);\n}\nexport function insertBefore(parentInstance, child, beforeChild) {\n  // child._remove() will not stop dragging\n  // but child.remove() will stop it, but we don't need it\n  // removing will reset zIndexes\n  child._remove();\n  parentInstance.add(child);\n  child.setZIndex(beforeChild.getZIndex());\n  updatePicture(parentInstance);\n}\nexport function insertInContainerBefore(parentInstance, child, beforeChild) {\n  insertBefore(parentInstance, child, beforeChild);\n}\nexport function removeChild(parentInstance, child) {\n  child.destroy();\n  child.off(EVENTS_NAMESPACE);\n  updatePicture(parentInstance);\n}\nexport function removeChildFromContainer(parentInstance, child) {\n  child.destroy();\n  child.off(EVENTS_NAMESPACE);\n  updatePicture(parentInstance);\n}\nexport function commitTextUpdate(textInstance, oldText, newText) {\n  console.error('Text components are not yet supported in ReactKonva. You text is: \"' + newText + '\"');\n}\nexport function commitMount(instance, type, newProps) {\n  // Noop\n}\nexport function commitUpdate(instance, updatePayload, type, oldProps, newProps) {\n  applyNodeProps(instance, newProps, oldProps);\n}\nexport function hideInstance(instance) {\n  instance.hide();\n  updatePicture(instance);\n}\nexport function hideTextInstance(textInstance) {\n  // Noop\n}\nexport function unhideInstance(instance, props) {\n  if (props.visible == null || props.visible) {\n    instance.show();\n  }\n}\nexport function unhideTextInstance(textInstance, text) {\n  // Noop\n}\nexport function clearContainer(container) {\n  // Noop\n}","map":{"version":3,"names":["Konva","applyNodeProps","updatePicture","EVENTS_NAMESPACE","unstable_now","now","unstable_IdlePriority","idlePriority","unstable_runWithPriority","run","NO_CONTEXT","UPDATE_SIGNAL","Node","prototype","_applyProps","appendInitialChild","parentInstance","child","console","error","add","createInstance","type","props","internalInstanceHandle","NodeClass","propsWithoutEvents","propsWithOnlyEvents","key","isEvent","slice","instance","createTextInstance","text","rootContainerInstance","finalizeInitialChildren","domElement","getPublicInstance","prepareForCommit","preparePortalMount","prepareUpdate","oldProps","newProps","resetAfterCommit","resetTextContent","shouldDeprioritizeSubtree","getRootHostContext","getChildHostContext","scheduleTimeout","setTimeout","cancelTimeout","clearTimeout","noTimeout","shouldSetTextContent","isPrimaryRenderer","warnsIfNotActing","supportsMutation","appendChild","parent","moveToTop","appendChildToContainer","insertBefore","beforeChild","_remove","setZIndex","getZIndex","insertInContainerBefore","removeChild","destroy","off","removeChildFromContainer","commitTextUpdate","textInstance","oldText","newText","commitMount","commitUpdate","updatePayload","hideInstance","hide","hideTextInstance","unhideInstance","visible","show","unhideTextInstance","clearContainer","container"],"sources":["/Users/UX201446/Documents/GitHub/konva/node_modules/react-konva/es/ReactKonvaHostConfig.js"],"sourcesContent":["import Konva from 'konva/lib/Core';\nimport { applyNodeProps, updatePicture, EVENTS_NAMESPACE } from './makeUpdates';\n\nexport { unstable_now as now, unstable_IdlePriority as idlePriority, unstable_runWithPriority as run } from 'scheduler';\n\nvar NO_CONTEXT = {};\nvar UPDATE_SIGNAL = {};\n\n// for react-spring capability\nKonva.Node.prototype._applyProps = applyNodeProps;\n\nexport function appendInitialChild(parentInstance, child) {\n  if (typeof child === 'string') {\n    // Noop for string children of Text (eg <Text>foo</Text>)\n    console.error('Do not use plain text as child of Konva.Node. You are using text: ' + child);\n    return;\n  }\n\n  parentInstance.add(child);\n\n  updatePicture(parentInstance);\n}\n\nexport function createInstance(type, props, internalInstanceHandle) {\n  var NodeClass = Konva[type];\n  if (!NodeClass) {\n    console.error('Konva has no node with the type ' + type + '. If you use minimal version of react-konva, just import required nodes into Konva: \"import \"konva/lib/shapes/' + type + '\"  If you want to render DOM elements as part of canvas tree take a look into this demo: https://konvajs.github.io/docs/react/DOM_Portal.html');\n    return;\n  }\n\n  // we need to split props into events and non events\n  // we we can pass non events into constructor directly\n  // that way the performance should be better\n  // we we apply change \"applyNodeProps\"\n  // then it will trigger change events on first run\n  // but we don't need them!\n  var propsWithoutEvents = {};\n  var propsWithOnlyEvents = {};\n\n  for (var key in props) {\n    var isEvent = key.slice(0, 2) === 'on';\n    if (isEvent) {\n      propsWithOnlyEvents[key] = props[key];\n    } else {\n      propsWithoutEvents[key] = props[key];\n    }\n  }\n\n  var instance = new NodeClass(propsWithoutEvents);\n\n  applyNodeProps(instance, propsWithOnlyEvents);\n\n  return instance;\n}\n\nexport function createTextInstance(text, rootContainerInstance, internalInstanceHandle) {\n  console.error('Text components are not supported for now in ReactKonva. Your text is: \"' + text + '\"');\n}\n\nexport function finalizeInitialChildren(domElement, type, props) {\n  return false;\n}\n\nexport function getPublicInstance(instance) {\n  return instance;\n}\n\nexport function prepareForCommit() {\n  return null;\n}\n\nexport function preparePortalMount() {\n  return null;\n}\n\nexport function prepareUpdate(domElement, type, oldProps, newProps) {\n  return UPDATE_SIGNAL;\n}\n\nexport function resetAfterCommit() {\n  // Noop\n}\n\nexport function resetTextContent(domElement) {\n  // Noop\n}\n\nexport function shouldDeprioritizeSubtree(type, props) {\n  return false;\n}\n\nexport function getRootHostContext() {\n  return NO_CONTEXT;\n}\n\nexport function getChildHostContext() {\n  return NO_CONTEXT;\n}\n\nexport var scheduleTimeout = setTimeout;\nexport var cancelTimeout = clearTimeout;\nexport var noTimeout = -1;\n// export const schedulePassiveEffects = scheduleDeferredCallback;\n// export const cancelPassiveEffects = cancelDeferredCallback;\n\nexport function shouldSetTextContent(type, props) {\n  return false;\n}\n\n// The Konva renderer is secondary to the React DOM renderer.\nexport var isPrimaryRenderer = false;\nexport var warnsIfNotActing = true;\nexport var supportsMutation = true;\n\nexport function appendChild(parentInstance, child) {\n  if (child.parent === parentInstance) {\n    child.moveToTop();\n  } else {\n    parentInstance.add(child);\n  }\n\n  updatePicture(parentInstance);\n}\n\nexport function appendChildToContainer(parentInstance, child) {\n  if (child.parent === parentInstance) {\n    child.moveToTop();\n  } else {\n    parentInstance.add(child);\n  }\n  updatePicture(parentInstance);\n}\n\nexport function insertBefore(parentInstance, child, beforeChild) {\n  // child._remove() will not stop dragging\n  // but child.remove() will stop it, but we don't need it\n  // removing will reset zIndexes\n  child._remove();\n  parentInstance.add(child);\n  child.setZIndex(beforeChild.getZIndex());\n  updatePicture(parentInstance);\n}\n\nexport function insertInContainerBefore(parentInstance, child, beforeChild) {\n  insertBefore(parentInstance, child, beforeChild);\n}\n\nexport function removeChild(parentInstance, child) {\n  child.destroy();\n  child.off(EVENTS_NAMESPACE);\n  updatePicture(parentInstance);\n}\n\nexport function removeChildFromContainer(parentInstance, child) {\n  child.destroy();\n  child.off(EVENTS_NAMESPACE);\n  updatePicture(parentInstance);\n}\n\nexport function commitTextUpdate(textInstance, oldText, newText) {\n  console.error('Text components are not yet supported in ReactKonva. You text is: \"' + newText + '\"');\n}\n\nexport function commitMount(instance, type, newProps) {\n  // Noop\n}\n\nexport function commitUpdate(instance, updatePayload, type, oldProps, newProps) {\n  applyNodeProps(instance, newProps, oldProps);\n}\n\nexport function hideInstance(instance) {\n  instance.hide();\n  updatePicture(instance);\n}\n\nexport function hideTextInstance(textInstance) {\n  // Noop\n}\n\nexport function unhideInstance(instance, props) {\n  if (props.visible == null || props.visible) {\n    instance.show();\n  }\n}\n\nexport function unhideTextInstance(textInstance, text) {\n  // Noop\n}\n\nexport function clearContainer(container) {\n  // Noop\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}