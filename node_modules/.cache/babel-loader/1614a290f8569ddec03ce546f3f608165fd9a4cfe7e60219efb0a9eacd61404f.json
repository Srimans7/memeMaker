{"ast":null,"code":"var propsToSkip = {\n  children: true,\n  ref: true,\n  key: true,\n  style: true,\n  forwardedRef: true,\n  unstable_applyCache: true,\n  unstable_applyDrawHitFromCache: true\n};\nvar zIndexWarningShowed = false;\nvar dragWarningShowed = false;\nexport var EVENTS_NAMESPACE = '.react-konva-event';\nvar useStrictMode = false;\nexport function toggleStrictMode(value) {\n  useStrictMode = value;\n}\nvar DRAGGABLE_WARNING = 'ReactKonva: You have a Konva node with draggable = true and position defined but no onDragMove or onDragEnd events are handled.\\nPosition of a node will be changed during drag&drop, so you should update state of the react app as well.\\nConsider to add onDragMove or onDragEnd events.\\nFor more info see: https://github.com/konvajs/react-konva/issues/256\\n';\nvar Z_INDEX_WARNING = 'ReactKonva: You are using \"zIndex\" attribute for a Konva node.\\nreact-konva may get confused with ordering. Just define correct order of elements in your render function of a component.\\nFor more info see: https://github.com/konvajs/react-konva/issues/194\\n';\nvar EMPTY_PROPS = {};\nexport function applyNodeProps(instance, props) {\n  var oldProps = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : EMPTY_PROPS;\n  if (props === oldProps) {\n    console.error('same props');\n  }\n  // don't use zIndex in react-konva\n  if (!zIndexWarningShowed && 'zIndex' in props) {\n    console.warn(Z_INDEX_WARNING);\n    zIndexWarningShowed = true;\n  }\n\n  // check correct draggable usage\n  if (!dragWarningShowed && props.draggable) {\n    var hasPosition = props.x !== undefined || props.y !== undefined;\n    var hasEvents = props.onDragEnd || props.onDragMove;\n    if (hasPosition && !hasEvents) {\n      console.warn(DRAGGABLE_WARNING);\n      dragWarningShowed = true;\n    }\n  }\n\n  // check old props\n  // we need to unset properties that are not in new props\n  // and remove all events\n  for (var key in oldProps) {\n    if (propsToSkip[key]) {\n      continue;\n    }\n    var isEvent = key.slice(0, 2) === 'on';\n    var propChanged = oldProps[key] !== props[key];\n\n    // if that is a changed event, we need to remvoe it\n    if (isEvent && propChanged) {\n      var eventName = key.substr(2).toLowerCase();\n      if (eventName.substr(0, 7) === 'content') {\n        eventName = 'content' + eventName.substr(7, 1).toUpperCase() + eventName.substr(8);\n      }\n      instance.off(eventName, oldProps[key]);\n    }\n    var toRemove = !props.hasOwnProperty(key);\n    if (toRemove) {\n      instance.setAttr(key, undefined);\n    }\n  }\n  var strictUpdate = useStrictMode || props._useStrictMode;\n  var updatedProps = {};\n  var hasUpdates = false;\n  var newEvents = {};\n  for (var key in props) {\n    if (propsToSkip[key]) {\n      continue;\n    }\n    var isEvent = key.slice(0, 2) === 'on';\n    var toAdd = oldProps[key] !== props[key];\n    if (isEvent && toAdd) {\n      var eventName = key.substr(2).toLowerCase();\n      if (eventName.substr(0, 7) === 'content') {\n        eventName = 'content' + eventName.substr(7, 1).toUpperCase() + eventName.substr(8);\n      }\n      // check that event is not undefined\n      if (props[key]) {\n        newEvents[eventName] = props[key];\n      }\n    }\n    if (!isEvent && (props[key] !== oldProps[key] || strictUpdate && props[key] !== instance.getAttr(key))) {\n      hasUpdates = true;\n      updatedProps[key] = props[key];\n    }\n  }\n  if (hasUpdates) {\n    instance.setAttrs(updatedProps);\n    updatePicture(instance);\n  }\n\n  // subscribe to events AFTER we set attrs\n  // we need it to fix https://github.com/konvajs/react-konva/issues/471\n  // settings attrs may add events. Like \"draggable: true\" will add \"mousedown\" listener\n  for (var eventName in newEvents) {\n    instance.on(eventName + EVENTS_NAMESPACE, newEvents[eventName]);\n  }\n}\nexport function updatePicture(node) {\n  var drawingNode = node.getLayer() || node.getStage();\n  drawingNode && drawingNode.batchDraw();\n}","map":{"version":3,"names":["propsToSkip","children","ref","key","style","forwardedRef","unstable_applyCache","unstable_applyDrawHitFromCache","zIndexWarningShowed","dragWarningShowed","EVENTS_NAMESPACE","useStrictMode","toggleStrictMode","value","DRAGGABLE_WARNING","Z_INDEX_WARNING","EMPTY_PROPS","applyNodeProps","instance","props","oldProps","arguments","length","undefined","console","error","warn","draggable","hasPosition","x","y","hasEvents","onDragEnd","onDragMove","isEvent","slice","propChanged","eventName","substr","toLowerCase","toUpperCase","off","toRemove","hasOwnProperty","setAttr","strictUpdate","_useStrictMode","updatedProps","hasUpdates","newEvents","toAdd","getAttr","setAttrs","updatePicture","on","node","drawingNode","getLayer","getStage","batchDraw"],"sources":["/Users/UX201446/Documents/GitHub/konva/node_modules/react-konva/es/makeUpdates.js"],"sourcesContent":["var propsToSkip = {\n  children: true,\n  ref: true,\n  key: true,\n  style: true,\n  forwardedRef: true,\n  unstable_applyCache: true,\n  unstable_applyDrawHitFromCache: true\n};\n\nvar zIndexWarningShowed = false;\nvar dragWarningShowed = false;\n\nexport var EVENTS_NAMESPACE = '.react-konva-event';\n\nvar useStrictMode = false;\nexport function toggleStrictMode(value) {\n  useStrictMode = value;\n}\n\nvar DRAGGABLE_WARNING = 'ReactKonva: You have a Konva node with draggable = true and position defined but no onDragMove or onDragEnd events are handled.\\nPosition of a node will be changed during drag&drop, so you should update state of the react app as well.\\nConsider to add onDragMove or onDragEnd events.\\nFor more info see: https://github.com/konvajs/react-konva/issues/256\\n';\n\nvar Z_INDEX_WARNING = 'ReactKonva: You are using \"zIndex\" attribute for a Konva node.\\nreact-konva may get confused with ordering. Just define correct order of elements in your render function of a component.\\nFor more info see: https://github.com/konvajs/react-konva/issues/194\\n';\n\nvar EMPTY_PROPS = {};\n\nexport function applyNodeProps(instance, props) {\n  var oldProps = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : EMPTY_PROPS;\n\n  if (props === oldProps) {\n    console.error('same props');\n  }\n  // don't use zIndex in react-konva\n  if (!zIndexWarningShowed && 'zIndex' in props) {\n    console.warn(Z_INDEX_WARNING);\n    zIndexWarningShowed = true;\n  }\n\n  // check correct draggable usage\n  if (!dragWarningShowed && props.draggable) {\n    var hasPosition = props.x !== undefined || props.y !== undefined;\n    var hasEvents = props.onDragEnd || props.onDragMove;\n    if (hasPosition && !hasEvents) {\n      console.warn(DRAGGABLE_WARNING);\n      dragWarningShowed = true;\n    }\n  }\n\n  // check old props\n  // we need to unset properties that are not in new props\n  // and remove all events\n  for (var key in oldProps) {\n    if (propsToSkip[key]) {\n      continue;\n    }\n    var isEvent = key.slice(0, 2) === 'on';\n    var propChanged = oldProps[key] !== props[key];\n\n    // if that is a changed event, we need to remvoe it\n    if (isEvent && propChanged) {\n      var eventName = key.substr(2).toLowerCase();\n      if (eventName.substr(0, 7) === 'content') {\n        eventName = 'content' + eventName.substr(7, 1).toUpperCase() + eventName.substr(8);\n      }\n      instance.off(eventName, oldProps[key]);\n    }\n    var toRemove = !props.hasOwnProperty(key);\n    if (toRemove) {\n      instance.setAttr(key, undefined);\n    }\n  }\n\n  var strictUpdate = useStrictMode || props._useStrictMode;\n  var updatedProps = {};\n  var hasUpdates = false;\n\n  var newEvents = {};\n\n  for (var key in props) {\n    if (propsToSkip[key]) {\n      continue;\n    }\n    var isEvent = key.slice(0, 2) === 'on';\n    var toAdd = oldProps[key] !== props[key];\n    if (isEvent && toAdd) {\n      var eventName = key.substr(2).toLowerCase();\n      if (eventName.substr(0, 7) === 'content') {\n        eventName = 'content' + eventName.substr(7, 1).toUpperCase() + eventName.substr(8);\n      }\n      // check that event is not undefined\n      if (props[key]) {\n        newEvents[eventName] = props[key];\n      }\n    }\n    if (!isEvent && (props[key] !== oldProps[key] || strictUpdate && props[key] !== instance.getAttr(key))) {\n      hasUpdates = true;\n      updatedProps[key] = props[key];\n    }\n  }\n\n  if (hasUpdates) {\n    instance.setAttrs(updatedProps);\n    updatePicture(instance);\n  }\n\n  // subscribe to events AFTER we set attrs\n  // we need it to fix https://github.com/konvajs/react-konva/issues/471\n  // settings attrs may add events. Like \"draggable: true\" will add \"mousedown\" listener\n  for (var eventName in newEvents) {\n    instance.on(eventName + EVENTS_NAMESPACE, newEvents[eventName]);\n  }\n}\n\nexport function updatePicture(node) {\n  var drawingNode = node.getLayer() || node.getStage();\n  drawingNode && drawingNode.batchDraw();\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}