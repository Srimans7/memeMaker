{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DD = void 0;\nvar Global_1 = require(\"./Global\");\nvar Util_1 = require(\"./Util\");\nexports.DD = {\n  get isDragging() {\n    var flag = false;\n    exports.DD._dragElements.forEach(function (elem) {\n      if (elem.dragStatus === 'dragging') {\n        flag = true;\n      }\n    });\n    return flag;\n  },\n  justDragged: false,\n  get node() {\n    var node;\n    exports.DD._dragElements.forEach(function (elem) {\n      node = elem.node;\n    });\n    return node;\n  },\n  _dragElements: new Map(),\n  _drag: function (evt) {\n    var nodesToFireEvents = [];\n    exports.DD._dragElements.forEach(function (elem, key) {\n      var node = elem.node;\n      var stage = node.getStage();\n      stage.setPointersPositions(evt);\n      if (elem.pointerId === undefined) {\n        elem.pointerId = Util_1.Util._getFirstPointerId(evt);\n      }\n      var pos = stage._changedPointerPositions.find(function (pos) {\n        return pos.id === elem.pointerId;\n      });\n      if (!pos) {\n        return;\n      }\n      if (elem.dragStatus !== 'dragging') {\n        var dragDistance = node.dragDistance();\n        var distance = Math.max(Math.abs(pos.x - elem.startPointerPos.x), Math.abs(pos.y - elem.startPointerPos.y));\n        if (distance < dragDistance) {\n          return;\n        }\n        node.startDrag({\n          evt: evt\n        });\n        if (!node.isDragging()) {\n          return;\n        }\n      }\n      node._setDragPosition(evt, elem);\n      nodesToFireEvents.push(node);\n    });\n    nodesToFireEvents.forEach(function (node) {\n      node.fire('dragmove', {\n        type: 'dragmove',\n        target: node,\n        evt: evt\n      }, true);\n    });\n  },\n  _endDragBefore: function (evt) {\n    exports.DD._dragElements.forEach(function (elem, key) {\n      var node = elem.node;\n      var stage = node.getStage();\n      if (evt) {\n        stage.setPointersPositions(evt);\n      }\n      var pos = stage._changedPointerPositions.find(function (pos) {\n        return pos.id === elem.pointerId;\n      });\n      if (!pos) {\n        return;\n      }\n      if (elem.dragStatus === 'dragging' || elem.dragStatus === 'stopped') {\n        exports.DD.justDragged = true;\n        Global_1.Konva.listenClickTap = false;\n        elem.dragStatus = 'stopped';\n      }\n      var drawNode = elem.node.getLayer() || elem.node instanceof Global_1.Konva['Stage'] && elem.node;\n      if (drawNode) {\n        drawNode.batchDraw();\n      }\n    });\n  },\n  _endDragAfter: function (evt) {\n    exports.DD._dragElements.forEach(function (elem, key) {\n      if (elem.dragStatus === 'stopped') {\n        elem.node.fire('dragend', {\n          type: 'dragend',\n          target: elem.node,\n          evt: evt\n        }, true);\n      }\n      if (elem.dragStatus !== 'dragging') {\n        exports.DD._dragElements.delete(key);\n      }\n    });\n  }\n};\nif (Global_1.Konva.isBrowser) {\n  window.addEventListener('mouseup', exports.DD._endDragBefore, true);\n  window.addEventListener('touchend', exports.DD._endDragBefore, true);\n  window.addEventListener('mousemove', exports.DD._drag);\n  window.addEventListener('touchmove', exports.DD._drag);\n  window.addEventListener('mouseup', exports.DD._endDragAfter, false);\n  window.addEventListener('touchend', exports.DD._endDragAfter, false);\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","DD","Global_1","require","Util_1","isDragging","flag","_dragElements","forEach","elem","dragStatus","justDragged","node","Map","_drag","evt","nodesToFireEvents","key","stage","getStage","setPointersPositions","pointerId","undefined","Util","_getFirstPointerId","pos","_changedPointerPositions","find","id","dragDistance","distance","Math","max","abs","x","startPointerPos","y","startDrag","_setDragPosition","push","fire","type","target","_endDragBefore","Konva","listenClickTap","drawNode","getLayer","batchDraw","_endDragAfter","delete","isBrowser","window","addEventListener"],"sources":["/Users/UX201446/Documents/GitHub/konva/node_modules/konva/lib/DragAndDrop.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DD = void 0;\nvar Global_1 = require(\"./Global\");\nvar Util_1 = require(\"./Util\");\nexports.DD = {\n    get isDragging() {\n        var flag = false;\n        exports.DD._dragElements.forEach(function (elem) {\n            if (elem.dragStatus === 'dragging') {\n                flag = true;\n            }\n        });\n        return flag;\n    },\n    justDragged: false,\n    get node() {\n        var node;\n        exports.DD._dragElements.forEach(function (elem) {\n            node = elem.node;\n        });\n        return node;\n    },\n    _dragElements: new Map(),\n    _drag: function (evt) {\n        var nodesToFireEvents = [];\n        exports.DD._dragElements.forEach(function (elem, key) {\n            var node = elem.node;\n            var stage = node.getStage();\n            stage.setPointersPositions(evt);\n            if (elem.pointerId === undefined) {\n                elem.pointerId = Util_1.Util._getFirstPointerId(evt);\n            }\n            var pos = stage._changedPointerPositions.find(function (pos) { return pos.id === elem.pointerId; });\n            if (!pos) {\n                return;\n            }\n            if (elem.dragStatus !== 'dragging') {\n                var dragDistance = node.dragDistance();\n                var distance = Math.max(Math.abs(pos.x - elem.startPointerPos.x), Math.abs(pos.y - elem.startPointerPos.y));\n                if (distance < dragDistance) {\n                    return;\n                }\n                node.startDrag({ evt: evt });\n                if (!node.isDragging()) {\n                    return;\n                }\n            }\n            node._setDragPosition(evt, elem);\n            nodesToFireEvents.push(node);\n        });\n        nodesToFireEvents.forEach(function (node) {\n            node.fire('dragmove', {\n                type: 'dragmove',\n                target: node,\n                evt: evt,\n            }, true);\n        });\n    },\n    _endDragBefore: function (evt) {\n        exports.DD._dragElements.forEach(function (elem, key) {\n            var node = elem.node;\n            var stage = node.getStage();\n            if (evt) {\n                stage.setPointersPositions(evt);\n            }\n            var pos = stage._changedPointerPositions.find(function (pos) { return pos.id === elem.pointerId; });\n            if (!pos) {\n                return;\n            }\n            if (elem.dragStatus === 'dragging' || elem.dragStatus === 'stopped') {\n                exports.DD.justDragged = true;\n                Global_1.Konva.listenClickTap = false;\n                elem.dragStatus = 'stopped';\n            }\n            var drawNode = elem.node.getLayer() ||\n                (elem.node instanceof Global_1.Konva['Stage'] && elem.node);\n            if (drawNode) {\n                drawNode.batchDraw();\n            }\n        });\n    },\n    _endDragAfter: function (evt) {\n        exports.DD._dragElements.forEach(function (elem, key) {\n            if (elem.dragStatus === 'stopped') {\n                elem.node.fire('dragend', {\n                    type: 'dragend',\n                    target: elem.node,\n                    evt: evt,\n                }, true);\n            }\n            if (elem.dragStatus !== 'dragging') {\n                exports.DD._dragElements.delete(key);\n            }\n        });\n    },\n};\nif (Global_1.Konva.isBrowser) {\n    window.addEventListener('mouseup', exports.DD._endDragBefore, true);\n    window.addEventListener('touchend', exports.DD._endDragBefore, true);\n    window.addEventListener('mousemove', exports.DD._drag);\n    window.addEventListener('touchmove', exports.DD._drag);\n    window.addEventListener('mouseup', exports.DD._endDragAfter, false);\n    window.addEventListener('touchend', exports.DD._endDragAfter, false);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}