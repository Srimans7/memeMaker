{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Transformer = void 0;\nvar Util_1 = require(\"../Util\");\nvar Factory_1 = require(\"../Factory\");\nvar Node_1 = require(\"../Node\");\nvar Shape_1 = require(\"../Shape\");\nvar Rect_1 = require(\"./Rect\");\nvar Group_1 = require(\"../Group\");\nvar Global_1 = require(\"../Global\");\nvar Validators_1 = require(\"../Validators\");\nvar Global_2 = require(\"../Global\");\nvar EVENTS_NAME = 'tr-konva';\nvar ATTR_CHANGE_LIST = ['resizeEnabledChange', 'rotateAnchorOffsetChange', 'rotateEnabledChange', 'enabledAnchorsChange', 'anchorSizeChange', 'borderEnabledChange', 'borderStrokeChange', 'borderStrokeWidthChange', 'borderDashChange', 'anchorStrokeChange', 'anchorStrokeWidthChange', 'anchorFillChange', 'anchorCornerRadiusChange', 'ignoreStrokeChange'].map(function (e) {\n  return e + (\".\" + EVENTS_NAME);\n}).join(' ');\nvar NODES_RECT = 'nodesRect';\nvar TRANSFORM_CHANGE_STR = ['widthChange', 'heightChange', 'scaleXChange', 'scaleYChange', 'skewXChange', 'skewYChange', 'rotationChange', 'offsetXChange', 'offsetYChange', 'transformsEnabledChange', 'strokeWidthChange'].map(function (e) {\n  return e + (\".\" + EVENTS_NAME);\n}).join(' ');\nvar ANGLES = {\n  'top-left': -45,\n  'top-center': 0,\n  'top-right': 45,\n  'middle-right': -90,\n  'middle-left': 90,\n  'bottom-left': -135,\n  'bottom-center': 180,\n  'bottom-right': 135\n};\nvar TOUCH_DEVICE = ('ontouchstart' in Global_1.Konva._global);\nfunction getCursor(anchorName, rad) {\n  if (anchorName === 'rotater') {\n    return 'crosshair';\n  }\n  rad += Util_1.Util._degToRad(ANGLES[anchorName] || 0);\n  var angle = (Util_1.Util._radToDeg(rad) % 360 + 360) % 360;\n  if (Util_1.Util._inRange(angle, 315 + 22.5, 360) || Util_1.Util._inRange(angle, 0, 22.5)) {\n    return 'ns-resize';\n  } else if (Util_1.Util._inRange(angle, 45 - 22.5, 45 + 22.5)) {\n    return 'nesw-resize';\n  } else if (Util_1.Util._inRange(angle, 90 - 22.5, 90 + 22.5)) {\n    return 'ew-resize';\n  } else if (Util_1.Util._inRange(angle, 135 - 22.5, 135 + 22.5)) {\n    return 'nwse-resize';\n  } else if (Util_1.Util._inRange(angle, 180 - 22.5, 180 + 22.5)) {\n    return 'ns-resize';\n  } else if (Util_1.Util._inRange(angle, 225 - 22.5, 225 + 22.5)) {\n    return 'nesw-resize';\n  } else if (Util_1.Util._inRange(angle, 270 - 22.5, 270 + 22.5)) {\n    return 'ew-resize';\n  } else if (Util_1.Util._inRange(angle, 315 - 22.5, 315 + 22.5)) {\n    return 'nwse-resize';\n  } else {\n    Util_1.Util.error('Transformer has unknown angle for cursor detection: ' + angle);\n    return 'pointer';\n  }\n}\nvar ANCHORS_NAMES = ['top-left', 'top-center', 'top-right', 'middle-right', 'middle-left', 'bottom-left', 'bottom-center', 'bottom-right'];\nvar MAX_SAFE_INTEGER = 100000000;\nfunction getCenter(shape) {\n  return {\n    x: shape.x + shape.width / 2 * Math.cos(shape.rotation) + shape.height / 2 * Math.sin(-shape.rotation),\n    y: shape.y + shape.height / 2 * Math.cos(shape.rotation) + shape.width / 2 * Math.sin(shape.rotation)\n  };\n}\nfunction rotateAroundPoint(shape, angleRad, point) {\n  var x = point.x + (shape.x - point.x) * Math.cos(angleRad) - (shape.y - point.y) * Math.sin(angleRad);\n  var y = point.y + (shape.x - point.x) * Math.sin(angleRad) + (shape.y - point.y) * Math.cos(angleRad);\n  return __assign(__assign({}, shape), {\n    rotation: shape.rotation + angleRad,\n    x: x,\n    y: y\n  });\n}\nfunction rotateAroundCenter(shape, deltaRad) {\n  var center = getCenter(shape);\n  return rotateAroundPoint(shape, deltaRad, center);\n}\nfunction getSnap(snaps, newRotationRad, tol) {\n  var snapped = newRotationRad;\n  for (var i = 0; i < snaps.length; i++) {\n    var angle = Global_1.Konva.getAngle(snaps[i]);\n    var absDiff = Math.abs(angle - newRotationRad) % (Math.PI * 2);\n    var dif = Math.min(absDiff, Math.PI * 2 - absDiff);\n    if (dif < tol) {\n      snapped = angle;\n    }\n  }\n  return snapped;\n}\nvar Transformer = function (_super) {\n  __extends(Transformer, _super);\n  function Transformer(config) {\n    var _this = _super.call(this, config) || this;\n    _this._transforming = false;\n    _this._createElements();\n    _this._handleMouseMove = _this._handleMouseMove.bind(_this);\n    _this._handleMouseUp = _this._handleMouseUp.bind(_this);\n    _this.update = _this.update.bind(_this);\n    _this.on(ATTR_CHANGE_LIST, _this.update);\n    if (_this.getNode()) {\n      _this.update();\n    }\n    return _this;\n  }\n  Transformer.prototype.attachTo = function (node) {\n    this.setNode(node);\n    return this;\n  };\n  Transformer.prototype.setNode = function (node) {\n    Util_1.Util.warn('tr.setNode(shape), tr.node(shape) and tr.attachTo(shape) methods are deprecated. Please use tr.nodes(nodesArray) instead.');\n    return this.setNodes([node]);\n  };\n  Transformer.prototype.getNode = function () {\n    return this._nodes && this._nodes[0];\n  };\n  Transformer.prototype.setNodes = function (nodes) {\n    var _this = this;\n    if (nodes === void 0) {\n      nodes = [];\n    }\n    if (this._nodes && this._nodes.length) {\n      this.detach();\n    }\n    this._nodes = nodes;\n    if (nodes.length === 1) {\n      this.rotation(nodes[0].getAbsoluteRotation());\n    } else {\n      this.rotation(0);\n    }\n    this._nodes.forEach(function (node) {\n      var additionalEvents = node._attrsAffectingSize.map(function (prop) {\n        return prop + 'Change.' + EVENTS_NAME;\n      }).join(' ');\n      var onChange = function () {\n        if (_this.nodes().length === 1) {\n          _this.rotation(_this.nodes()[0].getAbsoluteRotation());\n        }\n        _this._resetTransformCache();\n        if (!_this._transforming && !_this.isDragging()) {\n          _this.update();\n        }\n      };\n      node.on(additionalEvents, onChange);\n      node.on(TRANSFORM_CHANGE_STR, onChange);\n      node.on(\"_clearTransformCache.\" + EVENTS_NAME, onChange);\n      node.on(\"xChange.\" + EVENTS_NAME + \" yChange.\" + EVENTS_NAME, onChange);\n      _this._proxyDrag(node);\n    });\n    this._resetTransformCache();\n    var elementsCreated = !!this.findOne('.top-left');\n    if (elementsCreated) {\n      this.update();\n    }\n    return this;\n  };\n  Transformer.prototype._proxyDrag = function (node) {\n    var _this = this;\n    var lastPos;\n    node.on(\"dragstart.\" + EVENTS_NAME, function (e) {\n      lastPos = node.getAbsolutePosition();\n      if (!_this.isDragging() && node !== _this.findOne('.back')) {\n        _this.startDrag(e, false);\n      }\n    });\n    node.on(\"dragmove.\" + EVENTS_NAME, function (e) {\n      if (!lastPos) {\n        return;\n      }\n      var abs = node.getAbsolutePosition();\n      var dx = abs.x - lastPos.x;\n      var dy = abs.y - lastPos.y;\n      _this.nodes().forEach(function (otherNode) {\n        if (otherNode === node) {\n          return;\n        }\n        if (otherNode.isDragging()) {\n          return;\n        }\n        var otherAbs = otherNode.getAbsolutePosition();\n        otherNode.setAbsolutePosition({\n          x: otherAbs.x + dx,\n          y: otherAbs.y + dy\n        });\n        otherNode.startDrag(e);\n      });\n      lastPos = null;\n    });\n  };\n  Transformer.prototype.getNodes = function () {\n    return this._nodes || [];\n  };\n  Transformer.prototype.getActiveAnchor = function () {\n    return this._movingAnchorName;\n  };\n  Transformer.prototype.detach = function () {\n    if (this._nodes) {\n      this._nodes.forEach(function (node) {\n        node.off('.' + EVENTS_NAME);\n      });\n    }\n    this._nodes = [];\n    this._resetTransformCache();\n  };\n  Transformer.prototype._resetTransformCache = function () {\n    this._clearCache(NODES_RECT);\n    this._clearCache('transform');\n    this._clearSelfAndDescendantCache('absoluteTransform');\n  };\n  Transformer.prototype._getNodeRect = function () {\n    return this._getCache(NODES_RECT, this.__getNodeRect);\n  };\n  Transformer.prototype.__getNodeShape = function (node, rot, relative) {\n    if (rot === void 0) {\n      rot = this.rotation();\n    }\n    var rect = node.getClientRect({\n      skipTransform: true,\n      skipShadow: true,\n      skipStroke: this.ignoreStroke()\n    });\n    var absScale = node.getAbsoluteScale(relative);\n    var absPos = node.getAbsolutePosition(relative);\n    var dx = rect.x * absScale.x - node.offsetX() * absScale.x;\n    var dy = rect.y * absScale.y - node.offsetY() * absScale.y;\n    var rotation = (Global_1.Konva.getAngle(node.getAbsoluteRotation()) + Math.PI * 2) % (Math.PI * 2);\n    var box = {\n      x: absPos.x + dx * Math.cos(rotation) + dy * Math.sin(-rotation),\n      y: absPos.y + dy * Math.cos(rotation) + dx * Math.sin(rotation),\n      width: rect.width * absScale.x,\n      height: rect.height * absScale.y,\n      rotation: rotation\n    };\n    return rotateAroundPoint(box, -Global_1.Konva.getAngle(rot), {\n      x: 0,\n      y: 0\n    });\n  };\n  Transformer.prototype.__getNodeRect = function () {\n    var _this = this;\n    var node = this.getNode();\n    if (!node) {\n      return {\n        x: -MAX_SAFE_INTEGER,\n        y: -MAX_SAFE_INTEGER,\n        width: 0,\n        height: 0,\n        rotation: 0\n      };\n    }\n    var totalPoints = [];\n    this.nodes().map(function (node) {\n      var box = node.getClientRect({\n        skipTransform: true,\n        skipShadow: true,\n        skipStroke: _this.ignoreStroke()\n      });\n      var points = [{\n        x: box.x,\n        y: box.y\n      }, {\n        x: box.x + box.width,\n        y: box.y\n      }, {\n        x: box.x + box.width,\n        y: box.y + box.height\n      }, {\n        x: box.x,\n        y: box.y + box.height\n      }];\n      var trans = node.getAbsoluteTransform();\n      points.forEach(function (point) {\n        var transformed = trans.point(point);\n        totalPoints.push(transformed);\n      });\n    });\n    var tr = new Util_1.Transform();\n    tr.rotate(-Global_1.Konva.getAngle(this.rotation()));\n    var minX, minY, maxX, maxY;\n    totalPoints.forEach(function (point) {\n      var transformed = tr.point(point);\n      if (minX === undefined) {\n        minX = maxX = transformed.x;\n        minY = maxY = transformed.y;\n      }\n      minX = Math.min(minX, transformed.x);\n      minY = Math.min(minY, transformed.y);\n      maxX = Math.max(maxX, transformed.x);\n      maxY = Math.max(maxY, transformed.y);\n    });\n    tr.invert();\n    var p = tr.point({\n      x: minX,\n      y: minY\n    });\n    return {\n      x: p.x,\n      y: p.y,\n      width: maxX - minX,\n      height: maxY - minY,\n      rotation: Global_1.Konva.getAngle(this.rotation())\n    };\n  };\n  Transformer.prototype.getX = function () {\n    return this._getNodeRect().x;\n  };\n  Transformer.prototype.getY = function () {\n    return this._getNodeRect().y;\n  };\n  Transformer.prototype.getWidth = function () {\n    return this._getNodeRect().width;\n  };\n  Transformer.prototype.getHeight = function () {\n    return this._getNodeRect().height;\n  };\n  Transformer.prototype._createElements = function () {\n    this._createBack();\n    ANCHORS_NAMES.forEach(function (name) {\n      this._createAnchor(name);\n    }.bind(this));\n    this._createAnchor('rotater');\n  };\n  Transformer.prototype._createAnchor = function (name) {\n    var _this = this;\n    var anchor = new Rect_1.Rect({\n      stroke: 'rgb(0, 161, 255)',\n      fill: 'white',\n      strokeWidth: 1,\n      name: name + ' _anchor',\n      dragDistance: 0,\n      draggable: true,\n      hitStrokeWidth: TOUCH_DEVICE ? 10 : 'auto'\n    });\n    var self = this;\n    anchor.on('mousedown touchstart', function (e) {\n      self._handleMouseDown(e);\n    });\n    anchor.on('dragstart', function (e) {\n      anchor.stopDrag();\n      e.cancelBubble = true;\n    });\n    anchor.on('dragend', function (e) {\n      e.cancelBubble = true;\n    });\n    anchor.on('mouseenter', function () {\n      var rad = Global_1.Konva.getAngle(_this.rotation());\n      var cursor = getCursor(name, rad);\n      anchor.getStage().content.style.cursor = cursor;\n      _this._cursorChange = true;\n    });\n    anchor.on('mouseout', function () {\n      anchor.getStage().content.style.cursor = '';\n      _this._cursorChange = false;\n    });\n    this.add(anchor);\n  };\n  Transformer.prototype._createBack = function () {\n    var _this = this;\n    var back = new Shape_1.Shape({\n      name: 'back',\n      width: 0,\n      height: 0,\n      draggable: true,\n      sceneFunc: function (ctx) {\n        var tr = this.getParent();\n        var padding = tr.padding();\n        ctx.beginPath();\n        ctx.rect(-padding, -padding, this.width() + padding * 2, this.height() + padding * 2);\n        ctx.moveTo(this.width() / 2, -padding);\n        if (tr.rotateEnabled()) {\n          ctx.lineTo(this.width() / 2, -tr.rotateAnchorOffset() * Util_1.Util._sign(this.height()) - padding);\n        }\n        ctx.fillStrokeShape(this);\n      },\n      hitFunc: function (ctx, shape) {\n        if (!_this.shouldOverdrawWholeArea()) {\n          return;\n        }\n        var padding = _this.padding();\n        ctx.beginPath();\n        ctx.rect(-padding, -padding, shape.width() + padding * 2, shape.height() + padding * 2);\n        ctx.fillStrokeShape(shape);\n      }\n    });\n    this.add(back);\n    this._proxyDrag(back);\n    back.on('dragstart', function (e) {\n      e.cancelBubble = true;\n    });\n    back.on('dragmove', function (e) {\n      e.cancelBubble = true;\n    });\n    back.on('dragend', function (e) {\n      e.cancelBubble = true;\n    });\n  };\n  Transformer.prototype._handleMouseDown = function (e) {\n    this._movingAnchorName = e.target.name().split(' ')[0];\n    var attrs = this._getNodeRect();\n    var width = attrs.width;\n    var height = attrs.height;\n    var hypotenuse = Math.sqrt(Math.pow(width, 2) + Math.pow(height, 2));\n    this.sin = Math.abs(height / hypotenuse);\n    this.cos = Math.abs(width / hypotenuse);\n    window.addEventListener('mousemove', this._handleMouseMove);\n    window.addEventListener('touchmove', this._handleMouseMove);\n    window.addEventListener('mouseup', this._handleMouseUp, true);\n    window.addEventListener('touchend', this._handleMouseUp, true);\n    this._transforming = true;\n    var ap = e.target.getAbsolutePosition();\n    var pos = e.target.getStage().getPointerPosition();\n    this._anchorDragOffset = {\n      x: pos.x - ap.x,\n      y: pos.y - ap.y\n    };\n    this._fire('transformstart', {\n      evt: e,\n      target: this.getNode()\n    });\n    this._nodes.forEach(function (target) {\n      target._fire('transformstart', {\n        evt: e,\n        target: target\n      });\n    });\n  };\n  Transformer.prototype._handleMouseMove = function (e) {\n    var x, y, newHypotenuse;\n    var anchorNode = this.findOne('.' + this._movingAnchorName);\n    var stage = anchorNode.getStage();\n    stage.setPointersPositions(e);\n    var pp = stage.getPointerPosition();\n    var newNodePos = {\n      x: pp.x - this._anchorDragOffset.x,\n      y: pp.y - this._anchorDragOffset.y\n    };\n    var oldAbs = anchorNode.getAbsolutePosition();\n    anchorNode.setAbsolutePosition(newNodePos);\n    var newAbs = anchorNode.getAbsolutePosition();\n    if (oldAbs.x === newAbs.x && oldAbs.y === newAbs.y) {\n      return;\n    }\n    if (this._movingAnchorName === 'rotater') {\n      var attrs = this._getNodeRect();\n      x = anchorNode.x() - attrs.width / 2;\n      y = -anchorNode.y() + attrs.height / 2;\n      var delta = Math.atan2(-y, x) + Math.PI / 2;\n      if (attrs.height < 0) {\n        delta -= Math.PI;\n      }\n      var oldRotation = Global_1.Konva.getAngle(this.rotation());\n      var newRotation = oldRotation + delta;\n      var tol = Global_1.Konva.getAngle(this.rotationSnapTolerance());\n      var snappedRot = getSnap(this.rotationSnaps(), newRotation, tol);\n      var diff = snappedRot - attrs.rotation;\n      var shape = rotateAroundCenter(attrs, diff);\n      this._fitNodesInto(shape, e);\n      return;\n    }\n    var keepProportion = this.keepRatio() || e.shiftKey;\n    var centeredScaling = this.centeredScaling() || e.altKey;\n    if (this._movingAnchorName === 'top-left') {\n      if (keepProportion) {\n        var comparePoint = centeredScaling ? {\n          x: this.width() / 2,\n          y: this.height() / 2\n        } : {\n          x: this.findOne('.bottom-right').x(),\n          y: this.findOne('.bottom-right').y()\n        };\n        newHypotenuse = Math.sqrt(Math.pow(comparePoint.x - anchorNode.x(), 2) + Math.pow(comparePoint.y - anchorNode.y(), 2));\n        var reverseX = this.findOne('.top-left').x() > comparePoint.x ? -1 : 1;\n        var reverseY = this.findOne('.top-left').y() > comparePoint.y ? -1 : 1;\n        x = newHypotenuse * this.cos * reverseX;\n        y = newHypotenuse * this.sin * reverseY;\n        this.findOne('.top-left').x(comparePoint.x - x);\n        this.findOne('.top-left').y(comparePoint.y - y);\n      }\n    } else if (this._movingAnchorName === 'top-center') {\n      this.findOne('.top-left').y(anchorNode.y());\n    } else if (this._movingAnchorName === 'top-right') {\n      if (keepProportion) {\n        var comparePoint = centeredScaling ? {\n          x: this.width() / 2,\n          y: this.height() / 2\n        } : {\n          x: this.findOne('.bottom-left').x(),\n          y: this.findOne('.bottom-left').y()\n        };\n        newHypotenuse = Math.sqrt(Math.pow(anchorNode.x() - comparePoint.x, 2) + Math.pow(comparePoint.y - anchorNode.y(), 2));\n        var reverseX = this.findOne('.top-right').x() < comparePoint.x ? -1 : 1;\n        var reverseY = this.findOne('.top-right').y() > comparePoint.y ? -1 : 1;\n        x = newHypotenuse * this.cos * reverseX;\n        y = newHypotenuse * this.sin * reverseY;\n        this.findOne('.top-right').x(comparePoint.x + x);\n        this.findOne('.top-right').y(comparePoint.y - y);\n      }\n      var pos = anchorNode.position();\n      this.findOne('.top-left').y(pos.y);\n      this.findOne('.bottom-right').x(pos.x);\n    } else if (this._movingAnchorName === 'middle-left') {\n      this.findOne('.top-left').x(anchorNode.x());\n    } else if (this._movingAnchorName === 'middle-right') {\n      this.findOne('.bottom-right').x(anchorNode.x());\n    } else if (this._movingAnchorName === 'bottom-left') {\n      if (keepProportion) {\n        var comparePoint = centeredScaling ? {\n          x: this.width() / 2,\n          y: this.height() / 2\n        } : {\n          x: this.findOne('.top-right').x(),\n          y: this.findOne('.top-right').y()\n        };\n        newHypotenuse = Math.sqrt(Math.pow(comparePoint.x - anchorNode.x(), 2) + Math.pow(anchorNode.y() - comparePoint.y, 2));\n        var reverseX = comparePoint.x < anchorNode.x() ? -1 : 1;\n        var reverseY = anchorNode.y() < comparePoint.y ? -1 : 1;\n        x = newHypotenuse * this.cos * reverseX;\n        y = newHypotenuse * this.sin * reverseY;\n        anchorNode.x(comparePoint.x - x);\n        anchorNode.y(comparePoint.y + y);\n      }\n      pos = anchorNode.position();\n      this.findOne('.top-left').x(pos.x);\n      this.findOne('.bottom-right').y(pos.y);\n    } else if (this._movingAnchorName === 'bottom-center') {\n      this.findOne('.bottom-right').y(anchorNode.y());\n    } else if (this._movingAnchorName === 'bottom-right') {\n      if (keepProportion) {\n        var comparePoint = centeredScaling ? {\n          x: this.width() / 2,\n          y: this.height() / 2\n        } : {\n          x: this.findOne('.top-left').x(),\n          y: this.findOne('.top-left').y()\n        };\n        newHypotenuse = Math.sqrt(Math.pow(anchorNode.x() - comparePoint.x, 2) + Math.pow(anchorNode.y() - comparePoint.y, 2));\n        var reverseX = this.findOne('.bottom-right').x() < comparePoint.x ? -1 : 1;\n        var reverseY = this.findOne('.bottom-right').y() < comparePoint.y ? -1 : 1;\n        x = newHypotenuse * this.cos * reverseX;\n        y = newHypotenuse * this.sin * reverseY;\n        this.findOne('.bottom-right').x(comparePoint.x + x);\n        this.findOne('.bottom-right').y(comparePoint.y + y);\n      }\n    } else {\n      console.error(new Error('Wrong position argument of selection resizer: ' + this._movingAnchorName));\n    }\n    var centeredScaling = this.centeredScaling() || e.altKey;\n    if (centeredScaling) {\n      var topLeft = this.findOne('.top-left');\n      var bottomRight = this.findOne('.bottom-right');\n      var topOffsetX = topLeft.x();\n      var topOffsetY = topLeft.y();\n      var bottomOffsetX = this.getWidth() - bottomRight.x();\n      var bottomOffsetY = this.getHeight() - bottomRight.y();\n      bottomRight.move({\n        x: -topOffsetX,\n        y: -topOffsetY\n      });\n      topLeft.move({\n        x: bottomOffsetX,\n        y: bottomOffsetY\n      });\n    }\n    var absPos = this.findOne('.top-left').getAbsolutePosition();\n    x = absPos.x;\n    y = absPos.y;\n    var width = this.findOne('.bottom-right').x() - this.findOne('.top-left').x();\n    var height = this.findOne('.bottom-right').y() - this.findOne('.top-left').y();\n    this._fitNodesInto({\n      x: x,\n      y: y,\n      width: width,\n      height: height,\n      rotation: Global_1.Konva.getAngle(this.rotation())\n    }, e);\n  };\n  Transformer.prototype._handleMouseUp = function (e) {\n    this._removeEvents(e);\n  };\n  Transformer.prototype.getAbsoluteTransform = function () {\n    return this.getTransform();\n  };\n  Transformer.prototype._removeEvents = function (e) {\n    if (this._transforming) {\n      this._transforming = false;\n      window.removeEventListener('mousemove', this._handleMouseMove);\n      window.removeEventListener('touchmove', this._handleMouseMove);\n      window.removeEventListener('mouseup', this._handleMouseUp, true);\n      window.removeEventListener('touchend', this._handleMouseUp, true);\n      var node = this.getNode();\n      this._fire('transformend', {\n        evt: e,\n        target: node\n      });\n      if (node) {\n        this._nodes.forEach(function (target) {\n          target._fire('transformend', {\n            evt: e,\n            target: target\n          });\n        });\n      }\n      this._movingAnchorName = null;\n    }\n  };\n  Transformer.prototype._fitNodesInto = function (newAttrs, evt) {\n    var _this = this;\n    var oldAttrs = this._getNodeRect();\n    var minSize = 1;\n    if (Util_1.Util._inRange(newAttrs.width, -this.padding() * 2 - minSize, minSize)) {\n      this.update();\n      return;\n    }\n    if (Util_1.Util._inRange(newAttrs.height, -this.padding() * 2 - minSize, minSize)) {\n      this.update();\n      return;\n    }\n    var allowNegativeScale = true;\n    var t = new Util_1.Transform();\n    t.rotate(Global_1.Konva.getAngle(this.rotation()));\n    if (this._movingAnchorName && newAttrs.width < 0 && this._movingAnchorName.indexOf('left') >= 0) {\n      var offset = t.point({\n        x: -this.padding() * 2,\n        y: 0\n      });\n      newAttrs.x += offset.x;\n      newAttrs.y += offset.y;\n      newAttrs.width += this.padding() * 2;\n      this._movingAnchorName = this._movingAnchorName.replace('left', 'right');\n      this._anchorDragOffset.x -= offset.x;\n      this._anchorDragOffset.y -= offset.y;\n      if (!allowNegativeScale) {\n        this.update();\n        return;\n      }\n    } else if (this._movingAnchorName && newAttrs.width < 0 && this._movingAnchorName.indexOf('right') >= 0) {\n      var offset = t.point({\n        x: this.padding() * 2,\n        y: 0\n      });\n      this._movingAnchorName = this._movingAnchorName.replace('right', 'left');\n      this._anchorDragOffset.x -= offset.x;\n      this._anchorDragOffset.y -= offset.y;\n      newAttrs.width += this.padding() * 2;\n      if (!allowNegativeScale) {\n        this.update();\n        return;\n      }\n    }\n    if (this._movingAnchorName && newAttrs.height < 0 && this._movingAnchorName.indexOf('top') >= 0) {\n      var offset = t.point({\n        x: 0,\n        y: -this.padding() * 2\n      });\n      newAttrs.x += offset.x;\n      newAttrs.y += offset.y;\n      this._movingAnchorName = this._movingAnchorName.replace('top', 'bottom');\n      this._anchorDragOffset.x -= offset.x;\n      this._anchorDragOffset.y -= offset.y;\n      newAttrs.height += this.padding() * 2;\n      if (!allowNegativeScale) {\n        this.update();\n        return;\n      }\n    } else if (this._movingAnchorName && newAttrs.height < 0 && this._movingAnchorName.indexOf('bottom') >= 0) {\n      var offset = t.point({\n        x: 0,\n        y: this.padding() * 2\n      });\n      this._movingAnchorName = this._movingAnchorName.replace('bottom', 'top');\n      this._anchorDragOffset.x -= offset.x;\n      this._anchorDragOffset.y -= offset.y;\n      newAttrs.height += this.padding() * 2;\n      if (!allowNegativeScale) {\n        this.update();\n        return;\n      }\n    }\n    if (this.boundBoxFunc()) {\n      var bounded = this.boundBoxFunc()(oldAttrs, newAttrs);\n      if (bounded) {\n        newAttrs = bounded;\n      } else {\n        Util_1.Util.warn('boundBoxFunc returned falsy. You should return new bound rect from it!');\n      }\n    }\n    var baseSize = 10000000;\n    var oldTr = new Util_1.Transform();\n    oldTr.translate(oldAttrs.x, oldAttrs.y);\n    oldTr.rotate(oldAttrs.rotation);\n    oldTr.scale(oldAttrs.width / baseSize, oldAttrs.height / baseSize);\n    var newTr = new Util_1.Transform();\n    newTr.translate(newAttrs.x, newAttrs.y);\n    newTr.rotate(newAttrs.rotation);\n    newTr.scale(newAttrs.width / baseSize, newAttrs.height / baseSize);\n    var delta = newTr.multiply(oldTr.invert());\n    this._nodes.forEach(function (node) {\n      var _a;\n      var parentTransform = node.getParent().getAbsoluteTransform();\n      var localTransform = node.getTransform().copy();\n      localTransform.translate(node.offsetX(), node.offsetY());\n      var newLocalTransform = new Util_1.Transform();\n      newLocalTransform.multiply(parentTransform.copy().invert()).multiply(delta).multiply(parentTransform).multiply(localTransform);\n      var attrs = newLocalTransform.decompose();\n      node.setAttrs(attrs);\n      _this._fire('transform', {\n        evt: evt,\n        target: node\n      });\n      node._fire('transform', {\n        evt: evt,\n        target: node\n      });\n      (_a = node.getLayer()) === null || _a === void 0 ? void 0 : _a.batchDraw();\n    });\n    this.rotation(Util_1.Util._getRotation(newAttrs.rotation));\n    this._resetTransformCache();\n    this.update();\n    this.getLayer().batchDraw();\n  };\n  Transformer.prototype.forceUpdate = function () {\n    this._resetTransformCache();\n    this.update();\n  };\n  Transformer.prototype._batchChangeChild = function (selector, attrs) {\n    var anchor = this.findOne(selector);\n    anchor.setAttrs(attrs);\n  };\n  Transformer.prototype.update = function () {\n    var _this = this;\n    var _a;\n    var attrs = this._getNodeRect();\n    this.rotation(Util_1.Util._getRotation(attrs.rotation));\n    var width = attrs.width;\n    var height = attrs.height;\n    var enabledAnchors = this.enabledAnchors();\n    var resizeEnabled = this.resizeEnabled();\n    var padding = this.padding();\n    var anchorSize = this.anchorSize();\n    this.find('._anchor').each(function (node) {\n      node.setAttrs({\n        width: anchorSize,\n        height: anchorSize,\n        offsetX: anchorSize / 2,\n        offsetY: anchorSize / 2,\n        stroke: _this.anchorStroke(),\n        strokeWidth: _this.anchorStrokeWidth(),\n        fill: _this.anchorFill(),\n        cornerRadius: _this.anchorCornerRadius()\n      });\n    });\n    this._batchChangeChild('.top-left', {\n      x: 0,\n      y: 0,\n      offsetX: anchorSize / 2 + padding,\n      offsetY: anchorSize / 2 + padding,\n      visible: resizeEnabled && enabledAnchors.indexOf('top-left') >= 0\n    });\n    this._batchChangeChild('.top-center', {\n      x: width / 2,\n      y: 0,\n      offsetY: anchorSize / 2 + padding,\n      visible: resizeEnabled && enabledAnchors.indexOf('top-center') >= 0\n    });\n    this._batchChangeChild('.top-right', {\n      x: width,\n      y: 0,\n      offsetX: anchorSize / 2 - padding,\n      offsetY: anchorSize / 2 + padding,\n      visible: resizeEnabled && enabledAnchors.indexOf('top-right') >= 0\n    });\n    this._batchChangeChild('.middle-left', {\n      x: 0,\n      y: height / 2,\n      offsetX: anchorSize / 2 + padding,\n      visible: resizeEnabled && enabledAnchors.indexOf('middle-left') >= 0\n    });\n    this._batchChangeChild('.middle-right', {\n      x: width,\n      y: height / 2,\n      offsetX: anchorSize / 2 - padding,\n      visible: resizeEnabled && enabledAnchors.indexOf('middle-right') >= 0\n    });\n    this._batchChangeChild('.bottom-left', {\n      x: 0,\n      y: height,\n      offsetX: anchorSize / 2 + padding,\n      offsetY: anchorSize / 2 - padding,\n      visible: resizeEnabled && enabledAnchors.indexOf('bottom-left') >= 0\n    });\n    this._batchChangeChild('.bottom-center', {\n      x: width / 2,\n      y: height,\n      offsetY: anchorSize / 2 - padding,\n      visible: resizeEnabled && enabledAnchors.indexOf('bottom-center') >= 0\n    });\n    this._batchChangeChild('.bottom-right', {\n      x: width,\n      y: height,\n      offsetX: anchorSize / 2 - padding,\n      offsetY: anchorSize / 2 - padding,\n      visible: resizeEnabled && enabledAnchors.indexOf('bottom-right') >= 0\n    });\n    this._batchChangeChild('.rotater', {\n      x: width / 2,\n      y: -this.rotateAnchorOffset() * Util_1.Util._sign(height) - padding,\n      visible: this.rotateEnabled()\n    });\n    this._batchChangeChild('.back', {\n      width: width,\n      height: height,\n      visible: this.borderEnabled(),\n      stroke: this.borderStroke(),\n      strokeWidth: this.borderStrokeWidth(),\n      dash: this.borderDash(),\n      x: 0,\n      y: 0\n    });\n    (_a = this.getLayer()) === null || _a === void 0 ? void 0 : _a.batchDraw();\n  };\n  Transformer.prototype.isTransforming = function () {\n    return this._transforming;\n  };\n  Transformer.prototype.stopTransform = function () {\n    if (this._transforming) {\n      this._removeEvents();\n      var anchorNode = this.findOne('.' + this._movingAnchorName);\n      if (anchorNode) {\n        anchorNode.stopDrag();\n      }\n    }\n  };\n  Transformer.prototype.destroy = function () {\n    if (this.getStage() && this._cursorChange) {\n      this.getStage().content.style.cursor = '';\n    }\n    Group_1.Group.prototype.destroy.call(this);\n    this.detach();\n    this._removeEvents();\n    return this;\n  };\n  Transformer.prototype.toObject = function () {\n    return Node_1.Node.prototype.toObject.call(this);\n  };\n  return Transformer;\n}(Group_1.Group);\nexports.Transformer = Transformer;\nfunction validateAnchors(val) {\n  if (!(val instanceof Array)) {\n    Util_1.Util.warn('enabledAnchors value should be an array');\n  }\n  if (val instanceof Array) {\n    val.forEach(function (name) {\n      if (ANCHORS_NAMES.indexOf(name) === -1) {\n        Util_1.Util.warn('Unknown anchor name: ' + name + '. Available names are: ' + ANCHORS_NAMES.join(', '));\n      }\n    });\n  }\n  return val || [];\n}\nTransformer.prototype.className = 'Transformer';\nGlobal_2._registerNode(Transformer);\nFactory_1.Factory.addGetterSetter(Transformer, 'enabledAnchors', ANCHORS_NAMES, validateAnchors);\nFactory_1.Factory.addGetterSetter(Transformer, 'resizeEnabled', true);\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorSize', 10, Validators_1.getNumberValidator());\nFactory_1.Factory.addGetterSetter(Transformer, 'rotateEnabled', true);\nFactory_1.Factory.addGetterSetter(Transformer, 'rotationSnaps', []);\nFactory_1.Factory.addGetterSetter(Transformer, 'rotateAnchorOffset', 50, Validators_1.getNumberValidator());\nFactory_1.Factory.addGetterSetter(Transformer, 'rotationSnapTolerance', 5, Validators_1.getNumberValidator());\nFactory_1.Factory.addGetterSetter(Transformer, 'borderEnabled', true);\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorStroke', 'rgb(0, 161, 255)');\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorStrokeWidth', 1, Validators_1.getNumberValidator());\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorFill', 'white');\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorCornerRadius', 0, Validators_1.getNumberValidator());\nFactory_1.Factory.addGetterSetter(Transformer, 'borderStroke', 'rgb(0, 161, 255)');\nFactory_1.Factory.addGetterSetter(Transformer, 'borderStrokeWidth', 1, Validators_1.getNumberValidator());\nFactory_1.Factory.addGetterSetter(Transformer, 'borderDash');\nFactory_1.Factory.addGetterSetter(Transformer, 'keepRatio', true);\nFactory_1.Factory.addGetterSetter(Transformer, 'centeredScaling', false);\nFactory_1.Factory.addGetterSetter(Transformer, 'ignoreStroke', false);\nFactory_1.Factory.addGetterSetter(Transformer, 'padding', 0, Validators_1.getNumberValidator());\nFactory_1.Factory.addGetterSetter(Transformer, 'node');\nFactory_1.Factory.addGetterSetter(Transformer, 'nodes');\nFactory_1.Factory.addGetterSetter(Transformer, 'boundBoxFunc');\nFactory_1.Factory.addGetterSetter(Transformer, 'shouldOverdrawWholeArea', false);\nFactory_1.Factory.backCompat(Transformer, {\n  lineEnabled: 'borderEnabled',\n  rotateHandlerOffset: 'rotateAnchorOffset',\n  enabledHandlers: 'enabledAnchors'\n});\nUtil_1.Collection.mapMethods(Transformer);","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__","constructor","create","__assign","assign","t","s","i","n","arguments","length","apply","defineProperty","exports","value","Transformer","Util_1","require","Factory_1","Node_1","Shape_1","Rect_1","Group_1","Global_1","Validators_1","Global_2","EVENTS_NAME","ATTR_CHANGE_LIST","map","e","join","NODES_RECT","TRANSFORM_CHANGE_STR","ANGLES","TOUCH_DEVICE","Konva","_global","getCursor","anchorName","rad","Util","_degToRad","angle","_radToDeg","_inRange","error","ANCHORS_NAMES","MAX_SAFE_INTEGER","getCenter","shape","x","width","Math","cos","rotation","height","sin","y","rotateAroundPoint","angleRad","point","rotateAroundCenter","deltaRad","center","getSnap","snaps","newRotationRad","tol","snapped","getAngle","absDiff","abs","PI","dif","min","_super","config","_this","_transforming","_createElements","_handleMouseMove","bind","_handleMouseUp","update","on","getNode","attachTo","node","setNode","warn","setNodes","_nodes","nodes","detach","getAbsoluteRotation","forEach","additionalEvents","_attrsAffectingSize","prop","onChange","_resetTransformCache","isDragging","_proxyDrag","elementsCreated","findOne","lastPos","getAbsolutePosition","startDrag","dx","dy","otherNode","otherAbs","setAbsolutePosition","getNodes","getActiveAnchor","_movingAnchorName","off","_clearCache","_clearSelfAndDescendantCache","_getNodeRect","_getCache","__getNodeRect","__getNodeShape","rot","relative","rect","getClientRect","skipTransform","skipShadow","skipStroke","ignoreStroke","absScale","getAbsoluteScale","absPos","offsetX","offsetY","box","totalPoints","points","trans","getAbsoluteTransform","transformed","push","tr","Transform","rotate","minX","minY","maxX","maxY","undefined","max","invert","getX","getY","getWidth","getHeight","_createBack","name","_createAnchor","anchor","Rect","stroke","fill","strokeWidth","dragDistance","draggable","hitStrokeWidth","self","_handleMouseDown","stopDrag","cancelBubble","cursor","getStage","content","style","_cursorChange","add","back","Shape","sceneFunc","ctx","getParent","padding","beginPath","moveTo","rotateEnabled","lineTo","rotateAnchorOffset","_sign","fillStrokeShape","hitFunc","shouldOverdrawWholeArea","target","split","attrs","hypotenuse","sqrt","pow","window","addEventListener","ap","pos","getPointerPosition","_anchorDragOffset","_fire","evt","newHypotenuse","anchorNode","stage","setPointersPositions","pp","newNodePos","oldAbs","newAbs","delta","atan2","oldRotation","newRotation","rotationSnapTolerance","snappedRot","rotationSnaps","diff","_fitNodesInto","keepProportion","keepRatio","shiftKey","centeredScaling","altKey","comparePoint","reverseX","reverseY","position","console","Error","topLeft","bottomRight","topOffsetX","topOffsetY","bottomOffsetX","bottomOffsetY","move","_removeEvents","getTransform","removeEventListener","newAttrs","oldAttrs","minSize","allowNegativeScale","indexOf","offset","replace","boundBoxFunc","bounded","baseSize","oldTr","translate","scale","newTr","multiply","_a","parentTransform","localTransform","copy","newLocalTransform","decompose","setAttrs","getLayer","batchDraw","_getRotation","forceUpdate","_batchChangeChild","selector","enabledAnchors","resizeEnabled","anchorSize","find","each","anchorStroke","anchorStrokeWidth","anchorFill","cornerRadius","anchorCornerRadius","visible","borderEnabled","borderStroke","borderStrokeWidth","dash","borderDash","isTransforming","stopTransform","destroy","Group","toObject","Node","validateAnchors","val","className","_registerNode","Factory","addGetterSetter","getNumberValidator","backCompat","lineEnabled","rotateHandlerOffset","enabledHandlers","Collection","mapMethods"],"sources":["/Users/UX201446/Documents/GitHub/konva/node_modules/konva/lib/shapes/Transformer.js"],"sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Transformer = void 0;\nvar Util_1 = require(\"../Util\");\nvar Factory_1 = require(\"../Factory\");\nvar Node_1 = require(\"../Node\");\nvar Shape_1 = require(\"../Shape\");\nvar Rect_1 = require(\"./Rect\");\nvar Group_1 = require(\"../Group\");\nvar Global_1 = require(\"../Global\");\nvar Validators_1 = require(\"../Validators\");\nvar Global_2 = require(\"../Global\");\nvar EVENTS_NAME = 'tr-konva';\nvar ATTR_CHANGE_LIST = [\n    'resizeEnabledChange',\n    'rotateAnchorOffsetChange',\n    'rotateEnabledChange',\n    'enabledAnchorsChange',\n    'anchorSizeChange',\n    'borderEnabledChange',\n    'borderStrokeChange',\n    'borderStrokeWidthChange',\n    'borderDashChange',\n    'anchorStrokeChange',\n    'anchorStrokeWidthChange',\n    'anchorFillChange',\n    'anchorCornerRadiusChange',\n    'ignoreStrokeChange',\n]\n    .map(function (e) { return e + (\".\" + EVENTS_NAME); })\n    .join(' ');\nvar NODES_RECT = 'nodesRect';\nvar TRANSFORM_CHANGE_STR = [\n    'widthChange',\n    'heightChange',\n    'scaleXChange',\n    'scaleYChange',\n    'skewXChange',\n    'skewYChange',\n    'rotationChange',\n    'offsetXChange',\n    'offsetYChange',\n    'transformsEnabledChange',\n    'strokeWidthChange',\n]\n    .map(function (e) { return e + (\".\" + EVENTS_NAME); })\n    .join(' ');\nvar ANGLES = {\n    'top-left': -45,\n    'top-center': 0,\n    'top-right': 45,\n    'middle-right': -90,\n    'middle-left': 90,\n    'bottom-left': -135,\n    'bottom-center': 180,\n    'bottom-right': 135,\n};\nvar TOUCH_DEVICE = 'ontouchstart' in Global_1.Konva._global;\nfunction getCursor(anchorName, rad) {\n    if (anchorName === 'rotater') {\n        return 'crosshair';\n    }\n    rad += Util_1.Util._degToRad(ANGLES[anchorName] || 0);\n    var angle = ((Util_1.Util._radToDeg(rad) % 360) + 360) % 360;\n    if (Util_1.Util._inRange(angle, 315 + 22.5, 360) || Util_1.Util._inRange(angle, 0, 22.5)) {\n        return 'ns-resize';\n    }\n    else if (Util_1.Util._inRange(angle, 45 - 22.5, 45 + 22.5)) {\n        return 'nesw-resize';\n    }\n    else if (Util_1.Util._inRange(angle, 90 - 22.5, 90 + 22.5)) {\n        return 'ew-resize';\n    }\n    else if (Util_1.Util._inRange(angle, 135 - 22.5, 135 + 22.5)) {\n        return 'nwse-resize';\n    }\n    else if (Util_1.Util._inRange(angle, 180 - 22.5, 180 + 22.5)) {\n        return 'ns-resize';\n    }\n    else if (Util_1.Util._inRange(angle, 225 - 22.5, 225 + 22.5)) {\n        return 'nesw-resize';\n    }\n    else if (Util_1.Util._inRange(angle, 270 - 22.5, 270 + 22.5)) {\n        return 'ew-resize';\n    }\n    else if (Util_1.Util._inRange(angle, 315 - 22.5, 315 + 22.5)) {\n        return 'nwse-resize';\n    }\n    else {\n        Util_1.Util.error('Transformer has unknown angle for cursor detection: ' + angle);\n        return 'pointer';\n    }\n}\nvar ANCHORS_NAMES = [\n    'top-left',\n    'top-center',\n    'top-right',\n    'middle-right',\n    'middle-left',\n    'bottom-left',\n    'bottom-center',\n    'bottom-right',\n];\nvar MAX_SAFE_INTEGER = 100000000;\nfunction getCenter(shape) {\n    return {\n        x: shape.x +\n            (shape.width / 2) * Math.cos(shape.rotation) +\n            (shape.height / 2) * Math.sin(-shape.rotation),\n        y: shape.y +\n            (shape.height / 2) * Math.cos(shape.rotation) +\n            (shape.width / 2) * Math.sin(shape.rotation),\n    };\n}\nfunction rotateAroundPoint(shape, angleRad, point) {\n    var x = point.x +\n        (shape.x - point.x) * Math.cos(angleRad) -\n        (shape.y - point.y) * Math.sin(angleRad);\n    var y = point.y +\n        (shape.x - point.x) * Math.sin(angleRad) +\n        (shape.y - point.y) * Math.cos(angleRad);\n    return __assign(__assign({}, shape), { rotation: shape.rotation + angleRad, x: x,\n        y: y });\n}\nfunction rotateAroundCenter(shape, deltaRad) {\n    var center = getCenter(shape);\n    return rotateAroundPoint(shape, deltaRad, center);\n}\nfunction getSnap(snaps, newRotationRad, tol) {\n    var snapped = newRotationRad;\n    for (var i = 0; i < snaps.length; i++) {\n        var angle = Global_1.Konva.getAngle(snaps[i]);\n        var absDiff = Math.abs(angle - newRotationRad) % (Math.PI * 2);\n        var dif = Math.min(absDiff, Math.PI * 2 - absDiff);\n        if (dif < tol) {\n            snapped = angle;\n        }\n    }\n    return snapped;\n}\nvar Transformer = (function (_super) {\n    __extends(Transformer, _super);\n    function Transformer(config) {\n        var _this = _super.call(this, config) || this;\n        _this._transforming = false;\n        _this._createElements();\n        _this._handleMouseMove = _this._handleMouseMove.bind(_this);\n        _this._handleMouseUp = _this._handleMouseUp.bind(_this);\n        _this.update = _this.update.bind(_this);\n        _this.on(ATTR_CHANGE_LIST, _this.update);\n        if (_this.getNode()) {\n            _this.update();\n        }\n        return _this;\n    }\n    Transformer.prototype.attachTo = function (node) {\n        this.setNode(node);\n        return this;\n    };\n    Transformer.prototype.setNode = function (node) {\n        Util_1.Util.warn('tr.setNode(shape), tr.node(shape) and tr.attachTo(shape) methods are deprecated. Please use tr.nodes(nodesArray) instead.');\n        return this.setNodes([node]);\n    };\n    Transformer.prototype.getNode = function () {\n        return this._nodes && this._nodes[0];\n    };\n    Transformer.prototype.setNodes = function (nodes) {\n        var _this = this;\n        if (nodes === void 0) { nodes = []; }\n        if (this._nodes && this._nodes.length) {\n            this.detach();\n        }\n        this._nodes = nodes;\n        if (nodes.length === 1) {\n            this.rotation(nodes[0].getAbsoluteRotation());\n        }\n        else {\n            this.rotation(0);\n        }\n        this._nodes.forEach(function (node) {\n            var additionalEvents = node._attrsAffectingSize\n                .map(function (prop) { return prop + 'Change.' + EVENTS_NAME; })\n                .join(' ');\n            var onChange = function () {\n                if (_this.nodes().length === 1) {\n                    _this.rotation(_this.nodes()[0].getAbsoluteRotation());\n                }\n                _this._resetTransformCache();\n                if (!_this._transforming && !_this.isDragging()) {\n                    _this.update();\n                }\n            };\n            node.on(additionalEvents, onChange);\n            node.on(TRANSFORM_CHANGE_STR, onChange);\n            node.on(\"_clearTransformCache.\" + EVENTS_NAME, onChange);\n            node.on(\"xChange.\" + EVENTS_NAME + \" yChange.\" + EVENTS_NAME, onChange);\n            _this._proxyDrag(node);\n        });\n        this._resetTransformCache();\n        var elementsCreated = !!this.findOne('.top-left');\n        if (elementsCreated) {\n            this.update();\n        }\n        return this;\n    };\n    Transformer.prototype._proxyDrag = function (node) {\n        var _this = this;\n        var lastPos;\n        node.on(\"dragstart.\" + EVENTS_NAME, function (e) {\n            lastPos = node.getAbsolutePosition();\n            if (!_this.isDragging() && node !== _this.findOne('.back')) {\n                _this.startDrag(e, false);\n            }\n        });\n        node.on(\"dragmove.\" + EVENTS_NAME, function (e) {\n            if (!lastPos) {\n                return;\n            }\n            var abs = node.getAbsolutePosition();\n            var dx = abs.x - lastPos.x;\n            var dy = abs.y - lastPos.y;\n            _this.nodes().forEach(function (otherNode) {\n                if (otherNode === node) {\n                    return;\n                }\n                if (otherNode.isDragging()) {\n                    return;\n                }\n                var otherAbs = otherNode.getAbsolutePosition();\n                otherNode.setAbsolutePosition({\n                    x: otherAbs.x + dx,\n                    y: otherAbs.y + dy,\n                });\n                otherNode.startDrag(e);\n            });\n            lastPos = null;\n        });\n    };\n    Transformer.prototype.getNodes = function () {\n        return this._nodes || [];\n    };\n    Transformer.prototype.getActiveAnchor = function () {\n        return this._movingAnchorName;\n    };\n    Transformer.prototype.detach = function () {\n        if (this._nodes) {\n            this._nodes.forEach(function (node) {\n                node.off('.' + EVENTS_NAME);\n            });\n        }\n        this._nodes = [];\n        this._resetTransformCache();\n    };\n    Transformer.prototype._resetTransformCache = function () {\n        this._clearCache(NODES_RECT);\n        this._clearCache('transform');\n        this._clearSelfAndDescendantCache('absoluteTransform');\n    };\n    Transformer.prototype._getNodeRect = function () {\n        return this._getCache(NODES_RECT, this.__getNodeRect);\n    };\n    Transformer.prototype.__getNodeShape = function (node, rot, relative) {\n        if (rot === void 0) { rot = this.rotation(); }\n        var rect = node.getClientRect({\n            skipTransform: true,\n            skipShadow: true,\n            skipStroke: this.ignoreStroke(),\n        });\n        var absScale = node.getAbsoluteScale(relative);\n        var absPos = node.getAbsolutePosition(relative);\n        var dx = rect.x * absScale.x - node.offsetX() * absScale.x;\n        var dy = rect.y * absScale.y - node.offsetY() * absScale.y;\n        var rotation = (Global_1.Konva.getAngle(node.getAbsoluteRotation()) + Math.PI * 2) %\n            (Math.PI * 2);\n        var box = {\n            x: absPos.x + dx * Math.cos(rotation) + dy * Math.sin(-rotation),\n            y: absPos.y + dy * Math.cos(rotation) + dx * Math.sin(rotation),\n            width: rect.width * absScale.x,\n            height: rect.height * absScale.y,\n            rotation: rotation,\n        };\n        return rotateAroundPoint(box, -Global_1.Konva.getAngle(rot), {\n            x: 0,\n            y: 0,\n        });\n    };\n    Transformer.prototype.__getNodeRect = function () {\n        var _this = this;\n        var node = this.getNode();\n        if (!node) {\n            return {\n                x: -MAX_SAFE_INTEGER,\n                y: -MAX_SAFE_INTEGER,\n                width: 0,\n                height: 0,\n                rotation: 0,\n            };\n        }\n        var totalPoints = [];\n        this.nodes().map(function (node) {\n            var box = node.getClientRect({\n                skipTransform: true,\n                skipShadow: true,\n                skipStroke: _this.ignoreStroke(),\n            });\n            var points = [\n                { x: box.x, y: box.y },\n                { x: box.x + box.width, y: box.y },\n                { x: box.x + box.width, y: box.y + box.height },\n                { x: box.x, y: box.y + box.height },\n            ];\n            var trans = node.getAbsoluteTransform();\n            points.forEach(function (point) {\n                var transformed = trans.point(point);\n                totalPoints.push(transformed);\n            });\n        });\n        var tr = new Util_1.Transform();\n        tr.rotate(-Global_1.Konva.getAngle(this.rotation()));\n        var minX, minY, maxX, maxY;\n        totalPoints.forEach(function (point) {\n            var transformed = tr.point(point);\n            if (minX === undefined) {\n                minX = maxX = transformed.x;\n                minY = maxY = transformed.y;\n            }\n            minX = Math.min(minX, transformed.x);\n            minY = Math.min(minY, transformed.y);\n            maxX = Math.max(maxX, transformed.x);\n            maxY = Math.max(maxY, transformed.y);\n        });\n        tr.invert();\n        var p = tr.point({ x: minX, y: minY });\n        return {\n            x: p.x,\n            y: p.y,\n            width: maxX - minX,\n            height: maxY - minY,\n            rotation: Global_1.Konva.getAngle(this.rotation()),\n        };\n    };\n    Transformer.prototype.getX = function () {\n        return this._getNodeRect().x;\n    };\n    Transformer.prototype.getY = function () {\n        return this._getNodeRect().y;\n    };\n    Transformer.prototype.getWidth = function () {\n        return this._getNodeRect().width;\n    };\n    Transformer.prototype.getHeight = function () {\n        return this._getNodeRect().height;\n    };\n    Transformer.prototype._createElements = function () {\n        this._createBack();\n        ANCHORS_NAMES.forEach(function (name) {\n            this._createAnchor(name);\n        }.bind(this));\n        this._createAnchor('rotater');\n    };\n    Transformer.prototype._createAnchor = function (name) {\n        var _this = this;\n        var anchor = new Rect_1.Rect({\n            stroke: 'rgb(0, 161, 255)',\n            fill: 'white',\n            strokeWidth: 1,\n            name: name + ' _anchor',\n            dragDistance: 0,\n            draggable: true,\n            hitStrokeWidth: TOUCH_DEVICE ? 10 : 'auto',\n        });\n        var self = this;\n        anchor.on('mousedown touchstart', function (e) {\n            self._handleMouseDown(e);\n        });\n        anchor.on('dragstart', function (e) {\n            anchor.stopDrag();\n            e.cancelBubble = true;\n        });\n        anchor.on('dragend', function (e) {\n            e.cancelBubble = true;\n        });\n        anchor.on('mouseenter', function () {\n            var rad = Global_1.Konva.getAngle(_this.rotation());\n            var cursor = getCursor(name, rad);\n            anchor.getStage().content.style.cursor = cursor;\n            _this._cursorChange = true;\n        });\n        anchor.on('mouseout', function () {\n            anchor.getStage().content.style.cursor = '';\n            _this._cursorChange = false;\n        });\n        this.add(anchor);\n    };\n    Transformer.prototype._createBack = function () {\n        var _this = this;\n        var back = new Shape_1.Shape({\n            name: 'back',\n            width: 0,\n            height: 0,\n            draggable: true,\n            sceneFunc: function (ctx) {\n                var tr = this.getParent();\n                var padding = tr.padding();\n                ctx.beginPath();\n                ctx.rect(-padding, -padding, this.width() + padding * 2, this.height() + padding * 2);\n                ctx.moveTo(this.width() / 2, -padding);\n                if (tr.rotateEnabled()) {\n                    ctx.lineTo(this.width() / 2, -tr.rotateAnchorOffset() * Util_1.Util._sign(this.height()) - padding);\n                }\n                ctx.fillStrokeShape(this);\n            },\n            hitFunc: function (ctx, shape) {\n                if (!_this.shouldOverdrawWholeArea()) {\n                    return;\n                }\n                var padding = _this.padding();\n                ctx.beginPath();\n                ctx.rect(-padding, -padding, shape.width() + padding * 2, shape.height() + padding * 2);\n                ctx.fillStrokeShape(shape);\n            },\n        });\n        this.add(back);\n        this._proxyDrag(back);\n        back.on('dragstart', function (e) {\n            e.cancelBubble = true;\n        });\n        back.on('dragmove', function (e) {\n            e.cancelBubble = true;\n        });\n        back.on('dragend', function (e) {\n            e.cancelBubble = true;\n        });\n    };\n    Transformer.prototype._handleMouseDown = function (e) {\n        this._movingAnchorName = e.target.name().split(' ')[0];\n        var attrs = this._getNodeRect();\n        var width = attrs.width;\n        var height = attrs.height;\n        var hypotenuse = Math.sqrt(Math.pow(width, 2) + Math.pow(height, 2));\n        this.sin = Math.abs(height / hypotenuse);\n        this.cos = Math.abs(width / hypotenuse);\n        window.addEventListener('mousemove', this._handleMouseMove);\n        window.addEventListener('touchmove', this._handleMouseMove);\n        window.addEventListener('mouseup', this._handleMouseUp, true);\n        window.addEventListener('touchend', this._handleMouseUp, true);\n        this._transforming = true;\n        var ap = e.target.getAbsolutePosition();\n        var pos = e.target.getStage().getPointerPosition();\n        this._anchorDragOffset = {\n            x: pos.x - ap.x,\n            y: pos.y - ap.y,\n        };\n        this._fire('transformstart', { evt: e, target: this.getNode() });\n        this._nodes.forEach(function (target) {\n            target._fire('transformstart', { evt: e, target: target });\n        });\n    };\n    Transformer.prototype._handleMouseMove = function (e) {\n        var x, y, newHypotenuse;\n        var anchorNode = this.findOne('.' + this._movingAnchorName);\n        var stage = anchorNode.getStage();\n        stage.setPointersPositions(e);\n        var pp = stage.getPointerPosition();\n        var newNodePos = {\n            x: pp.x - this._anchorDragOffset.x,\n            y: pp.y - this._anchorDragOffset.y,\n        };\n        var oldAbs = anchorNode.getAbsolutePosition();\n        anchorNode.setAbsolutePosition(newNodePos);\n        var newAbs = anchorNode.getAbsolutePosition();\n        if (oldAbs.x === newAbs.x && oldAbs.y === newAbs.y) {\n            return;\n        }\n        if (this._movingAnchorName === 'rotater') {\n            var attrs = this._getNodeRect();\n            x = anchorNode.x() - attrs.width / 2;\n            y = -anchorNode.y() + attrs.height / 2;\n            var delta = Math.atan2(-y, x) + Math.PI / 2;\n            if (attrs.height < 0) {\n                delta -= Math.PI;\n            }\n            var oldRotation = Global_1.Konva.getAngle(this.rotation());\n            var newRotation = oldRotation + delta;\n            var tol = Global_1.Konva.getAngle(this.rotationSnapTolerance());\n            var snappedRot = getSnap(this.rotationSnaps(), newRotation, tol);\n            var diff = snappedRot - attrs.rotation;\n            var shape = rotateAroundCenter(attrs, diff);\n            this._fitNodesInto(shape, e);\n            return;\n        }\n        var keepProportion = this.keepRatio() || e.shiftKey;\n        var centeredScaling = this.centeredScaling() || e.altKey;\n        if (this._movingAnchorName === 'top-left') {\n            if (keepProportion) {\n                var comparePoint = centeredScaling\n                    ? {\n                        x: this.width() / 2,\n                        y: this.height() / 2,\n                    }\n                    : {\n                        x: this.findOne('.bottom-right').x(),\n                        y: this.findOne('.bottom-right').y(),\n                    };\n                newHypotenuse = Math.sqrt(Math.pow(comparePoint.x - anchorNode.x(), 2) +\n                    Math.pow(comparePoint.y - anchorNode.y(), 2));\n                var reverseX = this.findOne('.top-left').x() > comparePoint.x ? -1 : 1;\n                var reverseY = this.findOne('.top-left').y() > comparePoint.y ? -1 : 1;\n                x = newHypotenuse * this.cos * reverseX;\n                y = newHypotenuse * this.sin * reverseY;\n                this.findOne('.top-left').x(comparePoint.x - x);\n                this.findOne('.top-left').y(comparePoint.y - y);\n            }\n        }\n        else if (this._movingAnchorName === 'top-center') {\n            this.findOne('.top-left').y(anchorNode.y());\n        }\n        else if (this._movingAnchorName === 'top-right') {\n            if (keepProportion) {\n                var comparePoint = centeredScaling\n                    ? {\n                        x: this.width() / 2,\n                        y: this.height() / 2,\n                    }\n                    : {\n                        x: this.findOne('.bottom-left').x(),\n                        y: this.findOne('.bottom-left').y(),\n                    };\n                newHypotenuse = Math.sqrt(Math.pow(anchorNode.x() - comparePoint.x, 2) +\n                    Math.pow(comparePoint.y - anchorNode.y(), 2));\n                var reverseX = this.findOne('.top-right').x() < comparePoint.x ? -1 : 1;\n                var reverseY = this.findOne('.top-right').y() > comparePoint.y ? -1 : 1;\n                x = newHypotenuse * this.cos * reverseX;\n                y = newHypotenuse * this.sin * reverseY;\n                this.findOne('.top-right').x(comparePoint.x + x);\n                this.findOne('.top-right').y(comparePoint.y - y);\n            }\n            var pos = anchorNode.position();\n            this.findOne('.top-left').y(pos.y);\n            this.findOne('.bottom-right').x(pos.x);\n        }\n        else if (this._movingAnchorName === 'middle-left') {\n            this.findOne('.top-left').x(anchorNode.x());\n        }\n        else if (this._movingAnchorName === 'middle-right') {\n            this.findOne('.bottom-right').x(anchorNode.x());\n        }\n        else if (this._movingAnchorName === 'bottom-left') {\n            if (keepProportion) {\n                var comparePoint = centeredScaling\n                    ? {\n                        x: this.width() / 2,\n                        y: this.height() / 2,\n                    }\n                    : {\n                        x: this.findOne('.top-right').x(),\n                        y: this.findOne('.top-right').y(),\n                    };\n                newHypotenuse = Math.sqrt(Math.pow(comparePoint.x - anchorNode.x(), 2) +\n                    Math.pow(anchorNode.y() - comparePoint.y, 2));\n                var reverseX = comparePoint.x < anchorNode.x() ? -1 : 1;\n                var reverseY = anchorNode.y() < comparePoint.y ? -1 : 1;\n                x = newHypotenuse * this.cos * reverseX;\n                y = newHypotenuse * this.sin * reverseY;\n                anchorNode.x(comparePoint.x - x);\n                anchorNode.y(comparePoint.y + y);\n            }\n            pos = anchorNode.position();\n            this.findOne('.top-left').x(pos.x);\n            this.findOne('.bottom-right').y(pos.y);\n        }\n        else if (this._movingAnchorName === 'bottom-center') {\n            this.findOne('.bottom-right').y(anchorNode.y());\n        }\n        else if (this._movingAnchorName === 'bottom-right') {\n            if (keepProportion) {\n                var comparePoint = centeredScaling\n                    ? {\n                        x: this.width() / 2,\n                        y: this.height() / 2,\n                    }\n                    : {\n                        x: this.findOne('.top-left').x(),\n                        y: this.findOne('.top-left').y(),\n                    };\n                newHypotenuse = Math.sqrt(Math.pow(anchorNode.x() - comparePoint.x, 2) +\n                    Math.pow(anchorNode.y() - comparePoint.y, 2));\n                var reverseX = this.findOne('.bottom-right').x() < comparePoint.x ? -1 : 1;\n                var reverseY = this.findOne('.bottom-right').y() < comparePoint.y ? -1 : 1;\n                x = newHypotenuse * this.cos * reverseX;\n                y = newHypotenuse * this.sin * reverseY;\n                this.findOne('.bottom-right').x(comparePoint.x + x);\n                this.findOne('.bottom-right').y(comparePoint.y + y);\n            }\n        }\n        else {\n            console.error(new Error('Wrong position argument of selection resizer: ' +\n                this._movingAnchorName));\n        }\n        var centeredScaling = this.centeredScaling() || e.altKey;\n        if (centeredScaling) {\n            var topLeft = this.findOne('.top-left');\n            var bottomRight = this.findOne('.bottom-right');\n            var topOffsetX = topLeft.x();\n            var topOffsetY = topLeft.y();\n            var bottomOffsetX = this.getWidth() - bottomRight.x();\n            var bottomOffsetY = this.getHeight() - bottomRight.y();\n            bottomRight.move({\n                x: -topOffsetX,\n                y: -topOffsetY,\n            });\n            topLeft.move({\n                x: bottomOffsetX,\n                y: bottomOffsetY,\n            });\n        }\n        var absPos = this.findOne('.top-left').getAbsolutePosition();\n        x = absPos.x;\n        y = absPos.y;\n        var width = this.findOne('.bottom-right').x() - this.findOne('.top-left').x();\n        var height = this.findOne('.bottom-right').y() - this.findOne('.top-left').y();\n        this._fitNodesInto({\n            x: x,\n            y: y,\n            width: width,\n            height: height,\n            rotation: Global_1.Konva.getAngle(this.rotation()),\n        }, e);\n    };\n    Transformer.prototype._handleMouseUp = function (e) {\n        this._removeEvents(e);\n    };\n    Transformer.prototype.getAbsoluteTransform = function () {\n        return this.getTransform();\n    };\n    Transformer.prototype._removeEvents = function (e) {\n        if (this._transforming) {\n            this._transforming = false;\n            window.removeEventListener('mousemove', this._handleMouseMove);\n            window.removeEventListener('touchmove', this._handleMouseMove);\n            window.removeEventListener('mouseup', this._handleMouseUp, true);\n            window.removeEventListener('touchend', this._handleMouseUp, true);\n            var node = this.getNode();\n            this._fire('transformend', { evt: e, target: node });\n            if (node) {\n                this._nodes.forEach(function (target) {\n                    target._fire('transformend', { evt: e, target: target });\n                });\n            }\n            this._movingAnchorName = null;\n        }\n    };\n    Transformer.prototype._fitNodesInto = function (newAttrs, evt) {\n        var _this = this;\n        var oldAttrs = this._getNodeRect();\n        var minSize = 1;\n        if (Util_1.Util._inRange(newAttrs.width, -this.padding() * 2 - minSize, minSize)) {\n            this.update();\n            return;\n        }\n        if (Util_1.Util._inRange(newAttrs.height, -this.padding() * 2 - minSize, minSize)) {\n            this.update();\n            return;\n        }\n        var allowNegativeScale = true;\n        var t = new Util_1.Transform();\n        t.rotate(Global_1.Konva.getAngle(this.rotation()));\n        if (this._movingAnchorName &&\n            newAttrs.width < 0 &&\n            this._movingAnchorName.indexOf('left') >= 0) {\n            var offset = t.point({\n                x: -this.padding() * 2,\n                y: 0,\n            });\n            newAttrs.x += offset.x;\n            newAttrs.y += offset.y;\n            newAttrs.width += this.padding() * 2;\n            this._movingAnchorName = this._movingAnchorName.replace('left', 'right');\n            this._anchorDragOffset.x -= offset.x;\n            this._anchorDragOffset.y -= offset.y;\n            if (!allowNegativeScale) {\n                this.update();\n                return;\n            }\n        }\n        else if (this._movingAnchorName &&\n            newAttrs.width < 0 &&\n            this._movingAnchorName.indexOf('right') >= 0) {\n            var offset = t.point({\n                x: this.padding() * 2,\n                y: 0,\n            });\n            this._movingAnchorName = this._movingAnchorName.replace('right', 'left');\n            this._anchorDragOffset.x -= offset.x;\n            this._anchorDragOffset.y -= offset.y;\n            newAttrs.width += this.padding() * 2;\n            if (!allowNegativeScale) {\n                this.update();\n                return;\n            }\n        }\n        if (this._movingAnchorName &&\n            newAttrs.height < 0 &&\n            this._movingAnchorName.indexOf('top') >= 0) {\n            var offset = t.point({\n                x: 0,\n                y: -this.padding() * 2,\n            });\n            newAttrs.x += offset.x;\n            newAttrs.y += offset.y;\n            this._movingAnchorName = this._movingAnchorName.replace('top', 'bottom');\n            this._anchorDragOffset.x -= offset.x;\n            this._anchorDragOffset.y -= offset.y;\n            newAttrs.height += this.padding() * 2;\n            if (!allowNegativeScale) {\n                this.update();\n                return;\n            }\n        }\n        else if (this._movingAnchorName &&\n            newAttrs.height < 0 &&\n            this._movingAnchorName.indexOf('bottom') >= 0) {\n            var offset = t.point({\n                x: 0,\n                y: this.padding() * 2,\n            });\n            this._movingAnchorName = this._movingAnchorName.replace('bottom', 'top');\n            this._anchorDragOffset.x -= offset.x;\n            this._anchorDragOffset.y -= offset.y;\n            newAttrs.height += this.padding() * 2;\n            if (!allowNegativeScale) {\n                this.update();\n                return;\n            }\n        }\n        if (this.boundBoxFunc()) {\n            var bounded = this.boundBoxFunc()(oldAttrs, newAttrs);\n            if (bounded) {\n                newAttrs = bounded;\n            }\n            else {\n                Util_1.Util.warn('boundBoxFunc returned falsy. You should return new bound rect from it!');\n            }\n        }\n        var baseSize = 10000000;\n        var oldTr = new Util_1.Transform();\n        oldTr.translate(oldAttrs.x, oldAttrs.y);\n        oldTr.rotate(oldAttrs.rotation);\n        oldTr.scale(oldAttrs.width / baseSize, oldAttrs.height / baseSize);\n        var newTr = new Util_1.Transform();\n        newTr.translate(newAttrs.x, newAttrs.y);\n        newTr.rotate(newAttrs.rotation);\n        newTr.scale(newAttrs.width / baseSize, newAttrs.height / baseSize);\n        var delta = newTr.multiply(oldTr.invert());\n        this._nodes.forEach(function (node) {\n            var _a;\n            var parentTransform = node.getParent().getAbsoluteTransform();\n            var localTransform = node.getTransform().copy();\n            localTransform.translate(node.offsetX(), node.offsetY());\n            var newLocalTransform = new Util_1.Transform();\n            newLocalTransform\n                .multiply(parentTransform.copy().invert())\n                .multiply(delta)\n                .multiply(parentTransform)\n                .multiply(localTransform);\n            var attrs = newLocalTransform.decompose();\n            node.setAttrs(attrs);\n            _this._fire('transform', { evt: evt, target: node });\n            node._fire('transform', { evt: evt, target: node });\n            (_a = node.getLayer()) === null || _a === void 0 ? void 0 : _a.batchDraw();\n        });\n        this.rotation(Util_1.Util._getRotation(newAttrs.rotation));\n        this._resetTransformCache();\n        this.update();\n        this.getLayer().batchDraw();\n    };\n    Transformer.prototype.forceUpdate = function () {\n        this._resetTransformCache();\n        this.update();\n    };\n    Transformer.prototype._batchChangeChild = function (selector, attrs) {\n        var anchor = this.findOne(selector);\n        anchor.setAttrs(attrs);\n    };\n    Transformer.prototype.update = function () {\n        var _this = this;\n        var _a;\n        var attrs = this._getNodeRect();\n        this.rotation(Util_1.Util._getRotation(attrs.rotation));\n        var width = attrs.width;\n        var height = attrs.height;\n        var enabledAnchors = this.enabledAnchors();\n        var resizeEnabled = this.resizeEnabled();\n        var padding = this.padding();\n        var anchorSize = this.anchorSize();\n        this.find('._anchor').each(function (node) {\n            node.setAttrs({\n                width: anchorSize,\n                height: anchorSize,\n                offsetX: anchorSize / 2,\n                offsetY: anchorSize / 2,\n                stroke: _this.anchorStroke(),\n                strokeWidth: _this.anchorStrokeWidth(),\n                fill: _this.anchorFill(),\n                cornerRadius: _this.anchorCornerRadius(),\n            });\n        });\n        this._batchChangeChild('.top-left', {\n            x: 0,\n            y: 0,\n            offsetX: anchorSize / 2 + padding,\n            offsetY: anchorSize / 2 + padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('top-left') >= 0,\n        });\n        this._batchChangeChild('.top-center', {\n            x: width / 2,\n            y: 0,\n            offsetY: anchorSize / 2 + padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('top-center') >= 0,\n        });\n        this._batchChangeChild('.top-right', {\n            x: width,\n            y: 0,\n            offsetX: anchorSize / 2 - padding,\n            offsetY: anchorSize / 2 + padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('top-right') >= 0,\n        });\n        this._batchChangeChild('.middle-left', {\n            x: 0,\n            y: height / 2,\n            offsetX: anchorSize / 2 + padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('middle-left') >= 0,\n        });\n        this._batchChangeChild('.middle-right', {\n            x: width,\n            y: height / 2,\n            offsetX: anchorSize / 2 - padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('middle-right') >= 0,\n        });\n        this._batchChangeChild('.bottom-left', {\n            x: 0,\n            y: height,\n            offsetX: anchorSize / 2 + padding,\n            offsetY: anchorSize / 2 - padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('bottom-left') >= 0,\n        });\n        this._batchChangeChild('.bottom-center', {\n            x: width / 2,\n            y: height,\n            offsetY: anchorSize / 2 - padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('bottom-center') >= 0,\n        });\n        this._batchChangeChild('.bottom-right', {\n            x: width,\n            y: height,\n            offsetX: anchorSize / 2 - padding,\n            offsetY: anchorSize / 2 - padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('bottom-right') >= 0,\n        });\n        this._batchChangeChild('.rotater', {\n            x: width / 2,\n            y: -this.rotateAnchorOffset() * Util_1.Util._sign(height) - padding,\n            visible: this.rotateEnabled(),\n        });\n        this._batchChangeChild('.back', {\n            width: width,\n            height: height,\n            visible: this.borderEnabled(),\n            stroke: this.borderStroke(),\n            strokeWidth: this.borderStrokeWidth(),\n            dash: this.borderDash(),\n            x: 0,\n            y: 0,\n        });\n        (_a = this.getLayer()) === null || _a === void 0 ? void 0 : _a.batchDraw();\n    };\n    Transformer.prototype.isTransforming = function () {\n        return this._transforming;\n    };\n    Transformer.prototype.stopTransform = function () {\n        if (this._transforming) {\n            this._removeEvents();\n            var anchorNode = this.findOne('.' + this._movingAnchorName);\n            if (anchorNode) {\n                anchorNode.stopDrag();\n            }\n        }\n    };\n    Transformer.prototype.destroy = function () {\n        if (this.getStage() && this._cursorChange) {\n            this.getStage().content.style.cursor = '';\n        }\n        Group_1.Group.prototype.destroy.call(this);\n        this.detach();\n        this._removeEvents();\n        return this;\n    };\n    Transformer.prototype.toObject = function () {\n        return Node_1.Node.prototype.toObject.call(this);\n    };\n    return Transformer;\n}(Group_1.Group));\nexports.Transformer = Transformer;\nfunction validateAnchors(val) {\n    if (!(val instanceof Array)) {\n        Util_1.Util.warn('enabledAnchors value should be an array');\n    }\n    if (val instanceof Array) {\n        val.forEach(function (name) {\n            if (ANCHORS_NAMES.indexOf(name) === -1) {\n                Util_1.Util.warn('Unknown anchor name: ' +\n                    name +\n                    '. Available names are: ' +\n                    ANCHORS_NAMES.join(', '));\n            }\n        });\n    }\n    return val || [];\n}\nTransformer.prototype.className = 'Transformer';\nGlobal_2._registerNode(Transformer);\nFactory_1.Factory.addGetterSetter(Transformer, 'enabledAnchors', ANCHORS_NAMES, validateAnchors);\nFactory_1.Factory.addGetterSetter(Transformer, 'resizeEnabled', true);\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorSize', 10, Validators_1.getNumberValidator());\nFactory_1.Factory.addGetterSetter(Transformer, 'rotateEnabled', true);\nFactory_1.Factory.addGetterSetter(Transformer, 'rotationSnaps', []);\nFactory_1.Factory.addGetterSetter(Transformer, 'rotateAnchorOffset', 50, Validators_1.getNumberValidator());\nFactory_1.Factory.addGetterSetter(Transformer, 'rotationSnapTolerance', 5, Validators_1.getNumberValidator());\nFactory_1.Factory.addGetterSetter(Transformer, 'borderEnabled', true);\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorStroke', 'rgb(0, 161, 255)');\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorStrokeWidth', 1, Validators_1.getNumberValidator());\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorFill', 'white');\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorCornerRadius', 0, Validators_1.getNumberValidator());\nFactory_1.Factory.addGetterSetter(Transformer, 'borderStroke', 'rgb(0, 161, 255)');\nFactory_1.Factory.addGetterSetter(Transformer, 'borderStrokeWidth', 1, Validators_1.getNumberValidator());\nFactory_1.Factory.addGetterSetter(Transformer, 'borderDash');\nFactory_1.Factory.addGetterSetter(Transformer, 'keepRatio', true);\nFactory_1.Factory.addGetterSetter(Transformer, 'centeredScaling', false);\nFactory_1.Factory.addGetterSetter(Transformer, 'ignoreStroke', false);\nFactory_1.Factory.addGetterSetter(Transformer, 'padding', 0, Validators_1.getNumberValidator());\nFactory_1.Factory.addGetterSetter(Transformer, 'node');\nFactory_1.Factory.addGetterSetter(Transformer, 'nodes');\nFactory_1.Factory.addGetterSetter(Transformer, 'boundBoxFunc');\nFactory_1.Factory.addGetterSetter(Transformer, 'shouldOverdrawWholeArea', false);\nFactory_1.Factory.backCompat(Transformer, {\n    lineEnabled: 'borderEnabled',\n    rotateHandlerOffset: 'rotateAnchorOffset',\n    enabledHandlers: 'enabledAnchors',\n});\nUtil_1.Collection.mapMethods(Transformer);\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}